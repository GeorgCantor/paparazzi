{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Paparazzi","text":"<p>An Android library to render your application screens without a physical device or emulator.</p> <pre><code>class LaunchViewTest {\n  @get:Rule\n  val paparazzi = Paparazzi(\n    deviceConfig = PIXEL_5,\n    theme = \"android:Theme.Material.Light.NoActionBar\"\n    // ...see docs for more options\n  )\n\n  @Test\n  fun launchView() {\n    val view = paparazzi.inflate&lt;LaunchView&gt;(R.layout.launch)\n    // or...\n    // val view = LaunchView(paparazzi.context)\n\n    view.setModel(LaunchModel(title = \"paparazzi\"))\n    paparazzi.snapshot(view)\n  }\n\n  @Test\n  fun launchComposable() {\n    paparazzi.snapshot {\n      MyComposable()\n    }\n  }\n}\n</code></pre>"},{"location":"#tasks","title":"Tasks","text":"<pre><code>./gradlew sample:testDebug\n</code></pre> <p>Runs tests and generates an HTML report at <code>sample/build/reports/paparazzi/</code> showing all test runs and snapshots.</p> <pre><code>./gradlew sample:recordPaparazziDebug\n</code></pre> <p>Saves snapshots as golden values to a predefined source-controlled location (defaults to <code>src/test/snapshots</code>).</p> <pre><code>./gradlew sample:verifyPaparazziDebug\n</code></pre> <p>Runs tests and verifies against previously-recorded golden values. Failures generate diffs at <code>sample/build/paparazzi/failures</code>.</p> <p>For more examples, check out the sample project.</p>"},{"location":"#git-lfs","title":"Git LFS","text":"<p>It is recommended you use Git LFS to store your snapshots.  Here\u2019s a quick setup:</p> <pre><code>brew install git-lfs\ngit config core.hooksPath  # optional, confirm where your git hooks will be installed\ngit lfs install --local\ngit lfs track \"**/snapshots/**/*.png\"\ngit add .gitattributes\n</code></pre> <p>On CI, you might set up something like:</p> <p><code>$HOOKS_DIR/pre-receive</code> <pre><code># compares files that match .gitattributes filter to those actually tracked by git-lfs\ndiff &lt;(git ls-files ':(attr:filter=lfs)' | sort) &lt;(git lfs ls-files -n | sort) &gt;/dev/null\n\nret=$?\nif [[ $ret -ne 0 ]]; then\n  echo &gt;&amp;2 \"This remote has detected files committed without using Git LFS. Run 'brew install git-lfs &amp;&amp; git lfs install' to install it and re-commit your files.\";\n  exit 1;\nfi\n</code></pre></p> <p><code>your_build_script.sh</code> <pre><code>if [[ is running snapshot tests ]]; then\n  # fail fast if files not checked in using git lfs\n  \"$HOOKS_DIR\"/pre-receive\n  git lfs install --local\n  git lfs pull\nfi\n</code></pre></p>"},{"location":"#jetifier","title":"Jetifier","text":"<p>If using Jetifier to migrate off Support libraries, add the following to your <code>gradle.properties</code> to exclude bundled Android dependencies.</p> <pre><code>android.jetifier.ignorelist=android-base-common,common\n</code></pre>"},{"location":"#lottie","title":"Lottie","text":"<p>When taking screenshots of Lottie animations, you need to force Lottie to not run on a background thread, otherwise Paparazzi can throw exceptions #494, #630.</p> <pre><code>@Before\nfun setup() {\n    LottieTask.EXECUTOR = Executor(Runnable::run)\n}\n</code></pre>"},{"location":"#localinspectionmode","title":"LocalInspectionMode","text":"<p>Some Composables \u2013 such as <code>GoogleMap()</code> \u2013 check for <code>LocalInspectionMode</code> to short-circuit to a <code>@Preview</code>-safe Composable.</p> <p>However, Paparazzi does not set <code>LocalInspectionMode</code> globally to ensure that the snapshot represents the true production output, similar to how it overrides <code>View.isInEditMode</code> for legacy views.</p> <p>As a workaround, we recommend wrapping such a Composable in a custom Composable with a <code>CompositionLocalProvider</code> and setting <code>LocalInspectionMode</code> there.</p> <pre><code> @Test\n  fun inspectionModeView() {\n    paparazzi.snapshot(\n      CompositionLocalProvider(LocalInspectionMode provides true) {\n        YourComposable()\n      }\n    )\n  }\n</code></pre>"},{"location":"#releases","title":"Releases","text":"<p>Our change log has release history.</p> <p>Using plugin application: <pre><code>buildscript {\n  repositories {\n    mavenCentral()\n    google()\n  }\n  dependencies {\n    classpath 'app.cash.paparazzi:paparazzi-gradle-plugin:1.3.2'\n  }\n}\n\napply plugin: 'app.cash.paparazzi'\n</code></pre></p> <p>Using the plugins DSL: <pre><code>plugins {\n  id 'app.cash.paparazzi' version '1.3.2'\n}\n</code></pre></p> <p>Snapshots of the development version are available in Sonatype\u2019s <code>snapshots</code> repository.</p> <pre><code>repositories {\n  // ...\n  maven {\n    url 'https://oss.sonatype.org/content/repositories/snapshots/'\n  }\n}\n</code></pre>"},{"location":"#license","title":"License","text":"<pre><code>Copyright 2019 Square, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</code></pre>"},{"location":"changelog/","title":"Change Log","text":""},{"location":"changelog/#unreleased","title":"Unreleased","text":""},{"location":"changelog/#132-2024-01-13","title":"1.3.2 - 2024-01-13","text":""},{"location":"changelog/#note-due-to-a-known-issue-with-how-guava-now-publishes-its-artifact-you-will-need-to-apply-the-following-snippet-workaround-to-your-root-buildgradle","title":"NOTE: Due to a known issue with how Guava now publishes its artifact, you will need to apply the following snippet workaround to your root build.gradle:","text":"<p><pre><code>subprojects {\n  plugins.withId(\"app.cash.paparazzi\") {\n    // Defer until afterEvaluate so that testImplementation is created by Android plugin.\n    afterEvaluate {\n      dependencies.constraints {\n        add(\"testImplementation\", \"com.google.guava:guava\") {\n          attributes {\n            attribute(\n              TargetJvmEnvironment.TARGET_JVM_ENVIRONMENT_ATTRIBUTE,\n              objects.named(TargetJvmEnvironment, TargetJvmEnvironment.STANDARD_JVM)\n            )\n          }\n          because(\"LayoutLib and sdk-common depend on Guava's -jre published variant.\" +\n            \"See https://github.com/cashapp/paparazzi/issues/906.\")\n        }\n      }\n    }\n  }\n}\n</code></pre> See also: https://github.com/google/guava/issues/6801.</p>"},{"location":"changelog/#new","title":"New","text":"<ul> <li> <p>Support for pseudolocalization tests!  To get started: <pre><code>@RunWith(TestParameterInjector::class)\nclass PseudolocalizationTest(\n  @TestParameter locale: Locale\n) {\n  @get:Rule val paparazzi = Paparazzi(\n    deviceConfig = DeviceConfig.PIXEL_5.copy(locale = locale.tag)\n  )\n\n  @Test fun test() {\n    paparazzi.snapshot { SomeComposable() }\n  }\n\n  enum class Locale(val tag: String?) {\n    Default(null),\n    Accent(\"en-rXA\"),\n    Bidi(\"ar-rXB\")\n  }\n}\n</code></pre></p> </li> <li> <p>Migrate Paparazzi to layoutlib Giraffe 2022.3.1</p> </li> <li>Compose 1.5.0</li> <li>Kotlin 1.9.0</li> <li>[Gradle Plugin] Gradle 8.5</li> <li>[Gradle Plugin] Android Gradle Plugin 8.1.1</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Fix relativePath bug in port of ResourceFile</li> <li>Resolve report dir from ReportingExtension instead of hardcoding</li> <li>Make report folder variant-aware</li> <li>Remove reliance on kotlinx.coroutines.main.delay</li> <li>Use a class file locator that queries the system class loader</li> <li>Filter out unrecognized java-symbol tag warning</li> <li>Skip synthetic fields in R classes</li> <li>Update task inputs for resources and assets to account for file renames and moves</li> <li>Update delta images to support showing diff when width and height differ</li> </ul> <p>Kudos to @kevinzheng-ap, @TWiStErRob, @gamepro65, @adamalyyan, @larryng, and others for contributions this release!</p>"},{"location":"changelog/#131-2023-07-18","title":"1.3.1 - 2023-07-18","text":""},{"location":"changelog/#new_1","title":"New","text":"<ul> <li> <p>Migrated to new resource and asset loading mechanisms.  To explicitly opt-out and fall back to the legacy mechanisms, add either/both of the following to your <code>gradle.properties</code>: <pre><code>app.cash.paparazzi.legacy.resource.loading=true\napp.cash.paparazzi.legacy.asset.loading=true\n</code></pre></p> </li> <li> <p>The Android system ui (status + navigation bar) is now hidden by default; to re-enable: <pre><code>  @get:Rule\n  val paparazzi = Paparazzi(\n    showSystemUi = true\n  )\n</code></pre></p> </li> <li> <p>Relocate failure deltas from <code>PROJECT_ROOT/out/failures/</code> to <code>BUILD_DIR/paparazzi/failures/</code></p> </li> <li>Support for application and dynamic feature modules</li> <li>[Gradle Plugin] Gradle 8.2.1</li> </ul>"},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Fix accessibility labels when mergeDescendants is true</li> <li>Fixes compose alert dialogs not rendering when using RenderingMode.SHRINK</li> </ul> <p>Kudos to @kevinzheng-ap, @adamalyyan and others for contributions this release!</p>"},{"location":"changelog/#130-2023-05-31","title":"1.3.0 - 2023-05-31","text":"<p>As of this release, consumers must build on Java 17+ environments.</p>"},{"location":"changelog/#new_2","title":"New","text":"<ul> <li>Migrate Paparazzi to layoutlib Flamingo 2022.2.1</li> <li>Add accessibility support for Composables</li> <li>Add layout accessibility check support</li> <li>Compose 1.4.7</li> <li>Kotlin 1.8.21</li> <li>[Gradle Plugin] Gradle 8.1.1</li> <li>[Gradle Plugin] Android Gradle Plugin 8.0.2</li> </ul>"},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Configure android.os.Build values via reflection</li> <li>Various bug fixes with AccessibilityRenderExtension</li> <li>Make sure changes to system properties actually affect test tasks</li> <li>Fix caching bug with preparePaparazziResources task</li> <li>Use Dispatchers.Main for delay functionality</li> <li>Recomposition does not happen unless lifecycle is RESUMED</li> <li>Fix NPE when unit test variant is disabled</li> <li>Fix incompatibility with androidx.savedstate:1.1.0</li> </ul> <p>Kudos to @gamepro65, @geoff-powell, @TWiStErRob, @adamalyyan and others for contributions this release!</p>"},{"location":"changelog/#120-2023-01-18","title":"1.2.0 - 2023-01-18","text":""},{"location":"changelog/#new_3","title":"New","text":"<ul> <li>Migrate Paparazzi to layoutlib Electric Eel 2022.1.1</li> <li>Add support for RenderingMode.SHRINK to allow view-only screenshots</li> <li>Expose flag to show/hide system ui</li> <li>Register a default OnBackPressedDispatcherOwner if its present in classpath</li> <li>Bump default compileSdk to API 33</li> <li>Compose 1.3.1</li> <li>Kotlin 1.7.20</li> <li>[Gradle Plugin] Gradle 7.6</li> <li>[Gradle Plugin] Android Gradle Plugin 7.4.0</li> </ul>"},{"location":"changelog/#fixed_3","title":"Fixed","text":"<ul> <li>Flush errors on unsafeUpdateConfig</li> <li>Only apply wear circle shape to full device screenshots</li> <li>Synchronize access to Handler_Delegate.queue</li> <li>Apply compose hooks to all snapshot calls</li> <li>Register LifecycleOwner and SavedStateRegistryOwner to all views</li> <li>Execute Handler callbacks after snapshots to clean up Compose references</li> <li>Fix RecyclerView issue due to layoutlib Dolphin update</li> <li>Keep AGP and tools dependencies aligned</li> </ul> <p>Kudos to @gamepro65, @saket, @rharter and others for contributions this release!</p>"},{"location":"changelog/#110-2022-10-12","title":"1.1.0 - 2022-10-12","text":""},{"location":"changelog/#new_4","title":"New","text":"<ul> <li>Migrate Paparazzi to layoutlib Chipmunk 2021.2.1</li> <li>Add support for multiplatform plugin</li> <li>Add support for JDKs 16+</li> <li>Add support for locales and layout direction (LTR/RTL)</li> <li>Add Pixel 6 &amp; Pixel 6 Pro device configs</li> <li>Enable night mode for legacy views and composables</li> <li>Enable ui mode to support form factors other than phones/tablets, e.g., auto, watches, etc.</li> <li>Google Wear DeviceConfig support</li> <li>Expose an API for offsetting frame capture time</li> <li>Add InstantAnimationsRule to delay snapshot capture until the last frame.</li> <li>Compose 1.3.0</li> <li>Kotlin 1.7.10</li> <li>[Gradle Plugin] Gradle 7.5.1</li> </ul>"},{"location":"changelog/#fixed_4","title":"Fixed","text":"<ul> <li>Generate resource ids to support aapt inline resources in composables</li> <li>Reset AndroidUiDispatcher between compose snapshots</li> <li>Fix OOM error when a large number of compose snapshots are verified</li> <li>Fix HTML report in development mode</li> <li>Honor customization of Gradle\u2019s build output directory</li> <li>[Gradle Plugin] Configure native platform transformed path directly in test task to reduce cache misses</li> <li>[Gradle Plugin] Fix accidental eager task creation reducing memory pressure</li> <li>[Gradle Plugin] Fail explicitly when applying Android application plugin</li> </ul> <p>Kudos to @chris-horner, @swankjesse, @yschimke, @dniHze, @TWiStErRob, @gamepro65, @liutikas and others for contributions this release!</p>"},{"location":"changelog/#100-2022-06-03","title":"1.0.0 - 2022-06-03","text":""},{"location":"changelog/#new_5","title":"New","text":"<ul> <li>Support for Composable snapshots</li> <li>Migrate Paparazzi to layoutlib Bumblebee 2021.1.1 for better rendering and API 31 support</li> <li>Update Paparazzi configuration via new <code>unsafeUpdateConfig</code> method instead of <code>snapshot</code>/<code>gif</code></li> <li>Cache Paparazzi bootstrap logic for better performance per test suite</li> <li>Surface internally thrown exceptions from layoutlib</li> <li>Throw a more helpful exception if Android platform is missing</li> <li>Bump default compileSdk to API 31</li> <li>Compose 1.1.1</li> <li>Kotlin 1.6.10</li> <li>[Gradle Plugin] Gradle 7.4.2</li> <li>[Gradle Plugin] Android Gradle Plugin 7.1.2</li> </ul>"},{"location":"changelog/#fixed_5","title":"Fixed","text":"<ul> <li>Prepend paths with file:// for clickable error output in IDE</li> <li>Update default SDK path on Linux</li> <li>Fix accessibility test logic to avoid unnecessary coloring changes on updated view ids</li> <li>Fixes crash when using InputMethodManager to show/hide keyboard</li> <li>Temporarily work around Compose runtime memory leaks</li> <li>[Gradle Plugin] Prefer namespace DSL declaration over manifest package declaration</li> <li>[Gradle Plugin] Publish plugin marker on snapshot builds</li> <li>[Gradle Plugin] Exclude androidTest sourceSets during paparazzi runs</li> </ul> <p>Kudos to @luis-cortes, @nak5ive, @alexvanyo, @gamepro65 and others for contributions this release!</p>"},{"location":"changelog/#093-2022-01-20","title":"0.9.3 - 2022-01-20","text":""},{"location":"changelog/#fixed_6","title":"Fixed","text":"<ul> <li>Load the correct mac arm artifact on M1 machines</li> <li>Generate fake View.id for consistent colors for accessibility entries when views are modified</li> </ul> <p>Kudos to @geoff-powell, @nicbell for their contributions this release!</p>"},{"location":"changelog/#092-2022-01-20","title":"0.9.2 - 2022-01-20","text":"<p>Please ignore this release</p>"},{"location":"changelog/#091-2022-01-14","title":"0.9.1 - 2022-01-14","text":""},{"location":"changelog/#fixed_7","title":"Fixed","text":"<ul> <li>Download mac arm artifact if on M1 machines</li> <li>Support for assets from transitive dependencies</li> <li>Add fix for ClassNotFoundException when using nonTransitiveRClass</li> <li>Update RELEASING notes to publish plugin marker artifact</li> <li>Avoid NPE in AccessibilityRenderExtension when layout params are not supplied</li> <li>Use View.id to generate consistent colors for accessibility entries when views are modified</li> </ul> <p>Kudos to @luis-cortes, @geoff-powell, @autonomousapps and @LuK1709 for their contributions this release!</p>"},{"location":"changelog/#090-2021-11-22","title":"0.9.0 - 2021-11-22","text":""},{"location":"changelog/#new_6","title":"New","text":"<ul> <li>Migrate Paparazzi to layoutlib Arctic Fox 2020.3.1, providing native support for M1 machines</li> <li>Migrate Paparazzi to layoutlib 4.2, unlocking future Compose support</li> <li>Add support for projects enabling non-transitive resources</li> <li>RenderExtension now visits view hierarchy pre-rendering instead of layering bitmaps post-rendering</li> <li>Fail-fast when Bridge.init fails, usually due to native crash</li> <li>Expose RenderingMode as a configurable option</li> <li>Bump default compileSdk to API 30</li> <li>Improve Java-interoperability experience</li> <li>Kotlin 1.5.31</li> </ul>"},{"location":"changelog/#fixed_8","title":"Fixed","text":"<ul> <li>Don\u2019t require Android plugin to be declared before Paparazzi plugin</li> <li>Clear AnimationHandler leak after each snapshot</li> <li>Don\u2019t generate empty mov files on snapshot failure</li> <li>Add Kotlin platform bom to prevent classpath conflicts during test builds</li> <li>Use correct default Android SDK path on Windows</li> <li>Use platform-agnostic file paths in Gradle artifacts to support remote caching across platforms</li> <li>Use platform-agnostic file paths in Javascript for web page support on Windows</li> <li>Fix font scaling issue in AccessibilityRenderExtension by using bundled font</li> </ul> <p>Kudos to @luis-cortes, @geoff-powell and @TWiStErRob for their contributions this release!</p>"},{"location":"changelog/#080-2021-10-07","title":"0.8.0 - 2021-10-07","text":""},{"location":"changelog/#new_7","title":"New","text":"<ul> <li>Migrate Paparazzi to use native layoutlib for better rendering and API 30 support</li> <li>Add new extension for rendering accessibility metadata</li> <li>Add support for fontScale in DeviceConfig</li> <li>Add device config for Pixel 5</li> <li>Add tasks to Gradle task verification group</li> <li>Migrate publishing to gradle-maven-publish-plugin</li> <li>Migrate builds to Github Actions</li> <li>Migrate sample test from Burst to TestParameterInjector</li> <li>Kotlin 1.5.21</li> <li>[Gradle Plugin] Support for configuration caching</li> <li>[Gradle Plugin] Gradle 7.2</li> </ul>"},{"location":"changelog/#fixed_9","title":"Fixed","text":"<ul> <li>Add method interceptor for matrix multiplication operations</li> <li>Don\u2019t swallow FileNotFoundExceptions when overridden platform dir doesn\u2019t exist</li> <li>[Gradle Plugin] Fix remote caching bug by referencing relative, not absolute, paths in intermediate resources file.</li> </ul>"},{"location":"changelog/#071-2021-05-17","title":"0.7.1 - 2021-05-17","text":""},{"location":"changelog/#new_8","title":"New","text":"<ul> <li>[Gradle Plugin] Support the \u2013tests option for record/verify tasks</li> </ul>"},{"location":"changelog/#fixed_10","title":"Fixed","text":"<ul> <li>[Gradle Plugin] Defer task configuration until created</li> </ul>"},{"location":"changelog/#070-2021-02-26","title":"0.7.0 - 2021-02-26","text":""},{"location":"changelog/#new_9","title":"New","text":"<ul> <li>Kotlin 1.4.30</li> <li>Add support for inline complex XML resources</li> <li>Enable Burst support</li> <li>Expose maximum percentage difference in image verification as a setting</li> <li>Render extension api to add extra information to snapshots</li> <li>Allow selection of night mode in DeviceConfig</li> <li>[Gradle Plugin] Gradle 6.8.3</li> <li>[Gradle Plugin] Creating an umbrella task to execute on all variants</li> </ul>"},{"location":"changelog/#fixed_11","title":"Fixed","text":"<ul> <li>Properly execute Choreographer.doFrame after view has been laid out</li> <li>Fix broken text appearances when style resource names contain periods</li> <li>Fix ability to access asset files</li> <li>Use target-sdk to simulate device when available</li> <li>Always write screenshots to disk in record mode</li> <li>Don\u2019t crash when running on Java 12+</li> <li>[Gradle Plugin] Force test re-runs when a resource or asset has changed</li> <li>[Gradle Plugin] Force test re-runs if generated report or snapshot dirs are deleted</li> </ul>"},{"location":"changelog/#060-2020-10-02","title":"0.6.0 - 2020-10-02","text":"<p>As of this release, consumers must build on Java 11 environments.</p>"},{"location":"changelog/#new_10","title":"New","text":"<ul> <li>Point to a more recent version of layoutlib that runs on Android Q and builds with Java 11.</li> <li>Refactor Paparazzi to better support non-Gradle builds</li> <li>Added device configs for Pixel 4 series</li> </ul>"},{"location":"changelog/#052-2020-09-17","title":"0.5.2 - 2020-09-17","text":""},{"location":"changelog/#fixed_12","title":"Fixed","text":"<ul> <li>[Gradle Plugin] Fixed record and verify tasks in multi-module projects.</li> </ul>"},{"location":"changelog/#051-2020-09-17","title":"0.5.1 - 2020-09-17","text":""},{"location":"changelog/#fixed_13","title":"Fixed","text":"<ul> <li>[Gradle Plugin] Fixed race condition in record and verify tasks.</li> </ul>"},{"location":"changelog/#050-2020-09-16","title":"0.5.0 - 2020-09-16","text":"<ul> <li>Initial release.</li> </ul>"},{"location":"code_of_conduct/","title":"Open Source Code of Conduct","text":"<p>At Square, we are committed to contributing to the open source community and simplifying the process of releasing and managing open source software. We\u2019ve seen incredible support and enthusiasm from thousands of people who have already contributed to our projects\u200a\u2014\u200aand we want to ensure our community continues to be truly open for everyone.</p> <p>This code of conduct outlines our expectations for participants, as well as steps to reporting unacceptable behavior. We are committed to providing a welcoming and inspiring community for all and expect our code of conduct to be honored.</p> <p>Square\u2019s open source community strives to:</p> <ul> <li> <p>Be open: We invite anyone to participate in any aspect of our projects. Our community is    open, and any responsibility can be carried by a contributor who demonstrates the required    capacity and competence.</p> </li> <li> <p>Be considerate: People use our work, and we depend on the work of others. Consider users and    colleagues before taking action. For example, changes to code, infrastructure, policy, and    documentation may negatively impact others.</p> </li> <li> <p>Be respectful: We expect people to work together to resolve conflict, assume good intentions,    and act with empathy. Do not turn disagreements into personal attacks.</p> </li> <li> <p>Be collaborative: Collaboration reduces redundancy and improves the quality of our work. We    strive for transparency within our open source community, and we work closely with upstream    developers and others in the free software community to coordinate our efforts.</p> </li> <li> <p>Be pragmatic: Questions are encouraged and should be asked early in the process to avoid    problems later. Be thoughtful and considerate when seeking out the appropriate forum for your    questions. Those who are asked should be responsive and helpful.</p> </li> <li> <p>Step down considerately: Members of every project come and go. When somebody leaves or    disengages from the project, they should make it known and take the proper steps to ensure that    others can pick up where they left off.</p> </li> </ul> <p>This code is not exhaustive or complete. It serves to distill our common understanding of a collaborative, shared environment, and goals. We expect it to be followed in spirit as much as in the letter.</p>"},{"location":"code_of_conduct/#diversity-statement","title":"Diversity Statement","text":"<p>We encourage everyone to participate and are committed to building a community for all. Although we may not be able to satisfy everyone, we all agree that everyone is equal.</p> <p>Whenever a participant has made a mistake, we expect them to take responsibility for it. If someone has been harmed or offended, it is our responsibility to listen carefully and respectfully, and do our best to right the wrong.</p> <p>Although this list cannot be exhaustive, we explicitly honor diversity in age, culture, ethnicity, gender identity or expression, language, national origin, political beliefs, profession, race, religion, sexual orientation, socioeconomic status, and technical ability. We will not tolerate discrimination based on any of the protected characteristics above, including participants with disabilities.</p>"},{"location":"code_of_conduct/#reporting-issues","title":"Reporting Issues","text":"<p>If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com. For more details, please see our Reporting Guidelines below.</p>"},{"location":"code_of_conduct/#thanks","title":"Thanks","text":"<p>Some of the ideas and wording for the statements and guidelines above were based on work by the Twitter, Ubuntu, GDC, and Django communities. We are thankful for their work.</p>"},{"location":"code_of_conduct/#reporting-guide","title":"Reporting Guide","text":"<p>If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com. All reports will be handled with discretion.</p> <p>In your report please include:</p> <ul> <li>Your contact information.</li> <li>Names (real, nicknames, or pseudonyms) of any individuals involved. If there are additional    witnesses, please include them as well.</li> <li>Your account of what occurred, and if you believe the incident is ongoing. If there is a publicly    available record (e.g. a mailing list archive or a public IRC logger), please include a link.</li> <li>Any additional information that may be helpful.</li> </ul> <p>After filing a report, a representative from the Square Code of Conduct committee will contact you personally. The committee will then review the incident, follow up with any additional questions, and make a decision as to how to respond.</p> <p>Anyone asked to stop unacceptable behavior is expected to comply immediately. If an individual engages in unacceptable behavior, the Square Code of Conduct committee may take any action they deem appropriate, up to and including a permanent ban from all of Square spaces without warning.</p>"},{"location":"1.x/","title":"paparazzi - Paparazzi","text":"<p>//paparazzi</p>"},{"location":"1.x/#paparazzi","title":"paparazzi","text":""},{"location":"1.x/#packages","title":"Packages","text":"Name app.cash.paparazzi app.cash.paparazzi.accessibility"},{"location":"1.x/paparazzi/app.cash.paparazzi/","title":"Package-level declarations - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"1.x/paparazzi/app.cash.paparazzi/#types","title":"Types","text":"Name Summary DeviceConfig [jvm]class DeviceConfig(val screenHeight: Int = 1280, val screenWidth: Int = 768, val xdpi: Int = 320, val ydpi: Int = 320, val orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, val uiMode: UiMode = UiMode.NORMAL, val nightMode: NightMode = NightMode.NOTNIGHT, val density: Density = Density.XHIGH, val fontScale: Float = 1.0f, val layoutDirection: LayoutDirection = LayoutDirection.LTR, val locale: String? = null, val ratio: ScreenRatio = ScreenRatio.NOTLONG, val size: ScreenSize = ScreenSize.NORMAL, val keyboard: Keyboard = Keyboard.NOKEY, val touchScreen: TouchScreen = TouchScreen.FINGER, val keyboardState: KeyboardState = KeyboardState.SOFT, val softButtons: Boolean = true, val navigation: Navigation = Navigation.NONAV, val screenRound: ScreenRound? = null, val released: String = \"November 13, 2012\")Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse <code>build.prop</code> and <code>attrs.xml</code> to generate the appropriate maps. Environment [jvm]class Environment(val platformDir: String, val appTestDir: String, val packageName: String, val compileSdkVersion: Int, val resourcePackageNames: List&lt;String&gt;, val localResourceDirs: List&lt;String&gt;, val moduleResourceDirs: List&lt;String&gt;, val libraryResourceDirs: List&lt;String&gt;, val allModuleAssetDirs: List&lt;String&gt;, val libraryAssetDirs: List&lt;String&gt;) Flags [jvm]object Flags HtmlReportWriter [jvm]class HtmlReportWriter@JvmOverloadsconstructor(runName: String = defaultRunName(), rootDirectory: File = File(System.getProperty(\"paparazzi.report.dir\")), snapshotRootDirectory: File = File(System.getProperty(\"paparazzi.snapshot.dir\"))) : SnapshotHandlerCreates an HTML report that avoids writing files that have already been written. InstantAnimationsRule [jvm]class InstantAnimationsRule : TestRuleSets animation duration scale to 0 so all animations run instantly. Use this with Paparazzi to skip animations and snapshot their terminal state. Paparazzi [jvm]class Paparazzi@JvmOverloadsconstructor(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set&lt;RenderExtension&gt; = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = false, validateAccessibility: Boolean = false) : TestRule RenderExtension [jvm]interface RenderExtensionAn extension for overlaying additional information on top of each rendered frame. Snapshot [jvm]class Snapshot(val name: String?, val testName: TestName, val timestamp: Date, val tags: List&lt;String&gt; = listOf(), val file: String? = null) SnapshotHandler [jvm]interface SnapshotHandler : Closeable SnapshotVerifier [jvm]class SnapshotVerifier@JvmOverloadsconstructor(maxPercentDifference: Double, rootDirectory: File = File(System.getProperty(\"paparazzi.snapshot.dir\"))) : SnapshotHandler TestName [jvm]class TestName(val packageName: String, val className: String, val methodName: String)"},{"location":"1.x/paparazzi/app.cash.paparazzi/#functions","title":"Functions","text":"Name Summary androidHome [jvm]fun androidHome(): String detectEnvironment [jvm]fun detectEnvironment(): Environment"},{"location":"1.x/paparazzi/app.cash.paparazzi/android-home/","title":"androidHome - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/androidHome</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/android-home/#androidhome","title":"androidHome","text":"<p>[jvm]\\ fun androidHome(): String</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/detect-environment/","title":"detectEnvironment - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/detectEnvironment</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/detect-environment/#detectenvironment","title":"detectEnvironment","text":"<p>[jvm]\\ fun detectEnvironment(): Environment</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/","title":"DeviceConfig - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/#deviceconfig","title":"DeviceConfig","text":"<p>[jvm]\\ class DeviceConfig(val screenHeight: Int = 1280, val screenWidth: Int = 768, val xdpi: Int = 320, val ydpi: Int = 320, val orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, val uiMode: UiMode = UiMode.NORMAL, val nightMode: NightMode = NightMode.NOTNIGHT, val density: Density = Density.XHIGH, val fontScale: Float = 1.0f, val layoutDirection: LayoutDirection = LayoutDirection.LTR, val locale: String? = null, val ratio: ScreenRatio = ScreenRatio.NOTLONG, val size: ScreenSize = ScreenSize.NORMAL, val keyboard: Keyboard = Keyboard.NOKEY, val touchScreen: TouchScreen = TouchScreen.FINGER, val keyboardState: KeyboardState = KeyboardState.SOFT, val softButtons: Boolean = true, val navigation: Navigation = Navigation.NONAV, val screenRound: ScreenRound? = null, val released: String = \"November 13, 2012\")</p> <p>Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse <code>build.prop</code> and <code>attrs.xml</code> to generate the appropriate maps.</p> <p>Defaults are for a Nexus 4 device.</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/#constructors","title":"Constructors","text":"DeviceConfig [jvm]constructor(screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, uiMode: UiMode = UiMode.NORMAL, nightMode: NightMode = NightMode.NOTNIGHT, density: Density = Density.XHIGH, fontScale: Float = 1.0f, layoutDirection: LayoutDirection = LayoutDirection.LTR, locale: String? = null, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, screenRound: ScreenRound? = null, released: String = \"November 13, 2012\")"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/#types","title":"Types","text":"Name Summary Companion [jvm]object CompanionDevice specs per: https://android.googlesource.com/platform/tools/base/+/mirror-goog-studio-master-dev/sdklib/src/main/java/com/android/sdklib/devices/nexus.xml"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/#properties","title":"Properties","text":"Name Summary density [jvm]val density: Density folderConfiguration [jvm]val folderConfiguration: FolderConfiguration fontScale [jvm]val fontScale: Float = 1.0f hardwareConfig [jvm]val hardwareConfig: HardwareConfig keyboard [jvm]val keyboard: Keyboard keyboardState [jvm]val keyboardState: KeyboardState layoutDirection [jvm]val layoutDirection: LayoutDirection locale [jvm]val locale: String? = null navigation [jvm]val navigation: Navigation nightMode [jvm]val nightMode: NightMode orientation [jvm]val orientation: ScreenOrientation ratio [jvm]val ratio: ScreenRatio released [jvm]val released: String screenHeight [jvm]val screenHeight: Int = 1280 screenRound [jvm]val screenRound: ScreenRound? = null screenWidth [jvm]val screenWidth: Int = 768 size [jvm]val size: ScreenSize softButtons [jvm]val softButtons: Boolean = true touchScreen [jvm]val touchScreen: TouchScreen uiMode [jvm]val uiMode: UiMode uiModeMask [jvm]val uiModeMask: Int xdpi [jvm]val xdpi: Int = 320 ydpi [jvm]val ydpi: Int = 320"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/#functions","title":"Functions","text":"Name Summary copy [jvm]fun copy(screenHeight: Int = this.screenHeight, screenWidth: Int = this.screenWidth, xdpi: Int = this.xdpi, ydpi: Int = this.ydpi, orientation: ScreenOrientation = this.orientation, uiMode: UiMode = this.uiMode, nightMode: NightMode = this.nightMode, density: Density = this.density, fontScale: Float = this.fontScale, layoutDirection: LayoutDirection = this.layoutDirection, locale: String? = this.locale, ratio: ScreenRatio = this.ratio, size: ScreenSize = this.size, keyboard: Keyboard = this.keyboard, touchScreen: TouchScreen = this.touchScreen, keyboardState: KeyboardState = this.keyboardState, softButtons: Boolean = this.softButtons, navigation: Navigation = this.navigation, screenRound: ScreenRound? = this.screenRound): DeviceConfig"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-device-config/","title":"DeviceConfig - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-device-config/#deviceconfig","title":"DeviceConfig","text":"<p>[jvm]\\ constructor(screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, uiMode: UiMode = UiMode.NORMAL, nightMode: NightMode = NightMode.NOTNIGHT, density: Density = Density.XHIGH, fontScale: Float = 1.0f, layoutDirection: LayoutDirection = LayoutDirection.LTR, locale: String? = null, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, screenRound: ScreenRound? = null, released: String = \"November 13, 2012\")</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/copy/","title":"copy - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/copy</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/copy/#copy","title":"copy","text":"<p>[jvm]\\ fun copy(screenHeight: Int = this.screenHeight, screenWidth: Int = this.screenWidth, xdpi: Int = this.xdpi, ydpi: Int = this.ydpi, orientation: ScreenOrientation = this.orientation, uiMode: UiMode = this.uiMode, nightMode: NightMode = this.nightMode, density: Density = this.density, fontScale: Float = this.fontScale, layoutDirection: LayoutDirection = this.layoutDirection, locale: String? = this.locale, ratio: ScreenRatio = this.ratio, size: ScreenSize = this.size, keyboard: Keyboard = this.keyboard, touchScreen: TouchScreen = this.touchScreen, keyboardState: KeyboardState = this.keyboardState, softButtons: Boolean = this.softButtons, navigation: Navigation = this.navigation, screenRound: ScreenRound? = this.screenRound): DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/density/","title":"density - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/density</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/density/#density","title":"density","text":"<p>[jvm]\\ val density: Density</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/folder-configuration/","title":"folderConfiguration - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/folderConfiguration</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/folder-configuration/#folderconfiguration","title":"folderConfiguration","text":"<p>[jvm]\\ val folderConfiguration: FolderConfiguration</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/font-scale/","title":"fontScale - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/fontScale</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/font-scale/#fontscale","title":"fontScale","text":"<p>[jvm]\\ val fontScale: Float = 1.0f</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/hardware-config/","title":"hardwareConfig - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/hardwareConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/hardware-config/#hardwareconfig","title":"hardwareConfig","text":"<p>[jvm]\\ val hardwareConfig: HardwareConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/keyboard-state/","title":"keyboardState - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/keyboardState</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/keyboard-state/#keyboardstate","title":"keyboardState","text":"<p>[jvm]\\ val keyboardState: KeyboardState</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/keyboard/","title":"keyboard - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/keyboard</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/keyboard/#keyboard","title":"keyboard","text":"<p>[jvm]\\ val keyboard: Keyboard</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/layout-direction/","title":"layoutDirection - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/layoutDirection</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/layout-direction/#layoutdirection","title":"layoutDirection","text":"<p>[jvm]\\ val layoutDirection: LayoutDirection</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/locale/","title":"locale - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/locale</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/locale/#locale","title":"locale","text":"<p>[jvm]\\ val locale: String? = null</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/navigation/","title":"navigation - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/navigation</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/navigation/#navigation","title":"navigation","text":"<p>[jvm]\\ val navigation: Navigation</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/night-mode/","title":"nightMode - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/nightMode</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/night-mode/#nightmode","title":"nightMode","text":"<p>[jvm]\\ val nightMode: NightMode</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/orientation/","title":"orientation - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/orientation</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/orientation/#orientation","title":"orientation","text":"<p>[jvm]\\ val orientation: ScreenOrientation</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ratio/","title":"ratio - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/ratio</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ratio/#ratio","title":"ratio","text":"<p>[jvm]\\ val ratio: ScreenRatio</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/released/","title":"released - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/released</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/released/#released","title":"released","text":"<p>[jvm]\\ val released: String</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-height/","title":"screenHeight - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/screenHeight</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-height/#screenheight","title":"screenHeight","text":"<p>[jvm]\\ val screenHeight: Int = 1280</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-round/","title":"screenRound - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/screenRound</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-round/#screenround","title":"screenRound","text":"<p>[jvm]\\ val screenRound: ScreenRound? = null</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-width/","title":"screenWidth - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/screenWidth</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-width/#screenwidth","title":"screenWidth","text":"<p>[jvm]\\ val screenWidth: Int = 768</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/size/","title":"size - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/size</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/size/#size","title":"size","text":"<p>[jvm]\\ val size: ScreenSize</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/soft-buttons/","title":"softButtons - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/softButtons</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/soft-buttons/#softbuttons","title":"softButtons","text":"<p>[jvm]\\ val softButtons: Boolean = true</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/touch-screen/","title":"touchScreen - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/touchScreen</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/touch-screen/#touchscreen","title":"touchScreen","text":"<p>[jvm]\\ val touchScreen: TouchScreen</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ui-mode-mask/","title":"uiModeMask - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/uiModeMask</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ui-mode-mask/#uimodemask","title":"uiModeMask","text":"<p>[jvm]\\ val uiModeMask: Int</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ui-mode/","title":"uiMode - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/uiMode</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ui-mode/#uimode","title":"uiMode","text":"<p>[jvm]\\ val uiMode: UiMode</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/xdpi/","title":"xdpi - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/xdpi</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/xdpi/#xdpi","title":"xdpi","text":"<p>[jvm]\\ val xdpi: Int = 320</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ydpi/","title":"ydpi - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/ydpi</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ydpi/#ydpi","title":"ydpi","text":"<p>[jvm]\\ val ydpi: Int = 320</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/","title":"Companion - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p> <p>Device specs per: https://android.googlesource.com/platform/tools/base/+/mirror-goog-studio-master-dev/sdklib/src/main/java/com/android/sdklib/devices/nexus.xml</p> <p>Release dates obtained from Wikipedia.</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/#properties","title":"Properties","text":"Name Summary GALAXY_WATCH4_CLASSIC_LARGE [jvm]@JvmFieldval GALAXY_WATCH4_CLASSIC_LARGE: DeviceConfig NEXUS_10 [jvm]@JvmFieldval NEXUS_10: DeviceConfig NEXUS_4 [jvm]@JvmFieldval NEXUS_4: DeviceConfig NEXUS_5 [jvm]@JvmFieldval NEXUS_5: DeviceConfig NEXUS_7 [jvm]@JvmFieldval NEXUS_7: DeviceConfig NEXUS_7_2012 [jvm]@JvmFieldval NEXUS_7_2012: DeviceConfig PIXEL [jvm]@JvmFieldval PIXEL: DeviceConfig PIXEL_2 [jvm]@JvmFieldval PIXEL_2: DeviceConfig PIXEL_2_XL [jvm]@JvmFieldval PIXEL_2_XL: DeviceConfig PIXEL_3 [jvm]@JvmFieldval PIXEL_3: DeviceConfig PIXEL_3_XL [jvm]@JvmFieldval PIXEL_3_XL: DeviceConfig PIXEL_3A [jvm]@JvmFieldval PIXEL_3A: DeviceConfig PIXEL_3A_XL [jvm]@JvmFieldval PIXEL_3A_XL: DeviceConfig PIXEL_4 [jvm]@JvmFieldval PIXEL_4: DeviceConfig PIXEL_4_XL [jvm]@JvmFieldval PIXEL_4_XL: DeviceConfig PIXEL_4A [jvm]@JvmFieldval PIXEL_4A: DeviceConfig PIXEL_5 [jvm]@JvmFieldval PIXEL_5: DeviceConfig PIXEL_6 [jvm]@JvmFieldval PIXEL_6: DeviceConfig PIXEL_6_PRO [jvm]@JvmFieldval PIXEL_6_PRO: DeviceConfig PIXEL_C [jvm]@JvmFieldval PIXEL_C: DeviceConfig PIXEL_XL [jvm]@JvmFieldval PIXEL_XL: DeviceConfig WEAR_OS_SMALL_ROUND [jvm]@JvmFieldval WEAR_OS_SMALL_ROUND: DeviceConfig WEAR_OS_SQUARE [jvm]@JvmFieldval WEAR_OS_SQUARE: DeviceConfig"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-g-a-l-a-x-y_-w-a-t-c-h4_-c-l-a-s-s-i-c_-l-a-r-g-e/","title":"GALAXY_WATCH4_CLASSIC_LARGE - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/GALAXY_WATCH4_CLASSIC_LARGE</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-g-a-l-a-x-y_-w-a-t-c-h4_-c-l-a-s-s-i-c_-l-a-r-g-e/#galaxy_watch4_classic_large","title":"GALAXY_WATCH4_CLASSIC_LARGE","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val GALAXY_WATCH4_CLASSIC_LARGE: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_10/","title":"NEXUS_10 - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/NEXUS_10</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_10/#nexus_10","title":"NEXUS_10","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_10: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_4/","title":"NEXUS_4 - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/NEXUS_4</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_4/#nexus_4","title":"NEXUS_4","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_4: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_5/","title":"NEXUS_5 - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/NEXUS_5</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_5/#nexus_5","title":"NEXUS_5","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_5: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_7/","title":"NEXUS_7 - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/NEXUS_7</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_7/#nexus_7","title":"NEXUS_7","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_7: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_7_2012/","title":"NEXUS_7_2012 - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/NEXUS_7_2012</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_7_2012/#nexus_7_2012","title":"NEXUS_7_2012","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_7_2012: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l/","title":"PIXEL - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l/#pixel","title":"PIXEL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_-c/","title":"PIXEL_C - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_C</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_-c/#pixel_c","title":"PIXEL_C","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_C: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_-x-l/","title":"PIXEL_XL - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_XL</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_-x-l/#pixel_xl","title":"PIXEL_XL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_XL: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_2/","title":"PIXEL_2 - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_2</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_2/#pixel_2","title":"PIXEL_2","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_2: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_2_-x-l/","title":"PIXEL_2_XL - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_2_XL</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_2_-x-l/#pixel_2_xl","title":"PIXEL_2_XL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_2_XL: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3-a/","title":"PIXEL_3A - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_3A</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3-a/#pixel_3a","title":"PIXEL_3A","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_3A: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3-a_-x-l/","title":"PIXEL_3A_XL - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_3A_XL</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3-a_-x-l/#pixel_3a_xl","title":"PIXEL_3A_XL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_3A_XL: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3/","title":"PIXEL_3 - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_3</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3/#pixel_3","title":"PIXEL_3","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_3: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3_-x-l/","title":"PIXEL_3_XL - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_3_XL</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3_-x-l/#pixel_3_xl","title":"PIXEL_3_XL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_3_XL: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4-a/","title":"PIXEL_4A - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_4A</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4-a/#pixel_4a","title":"PIXEL_4A","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_4A: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4/","title":"PIXEL_4 - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_4</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4/#pixel_4","title":"PIXEL_4","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_4: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4_-x-l/","title":"PIXEL_4_XL - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_4_XL</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4_-x-l/#pixel_4_xl","title":"PIXEL_4_XL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_4_XL: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_5/","title":"PIXEL_5 - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_5</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_5/#pixel_5","title":"PIXEL_5","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_5: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_6/","title":"PIXEL_6 - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_6</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_6/#pixel_6","title":"PIXEL_6","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_6: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_6_-p-r-o/","title":"PIXEL_6_PRO - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/PIXEL_6_PRO</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_6_-p-r-o/#pixel_6_pro","title":"PIXEL_6_PRO","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_6_PRO: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-w-e-a-r_-o-s_-s-m-a-l-l_-r-o-u-n-d/","title":"WEAR_OS_SMALL_ROUND - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/WEAR_OS_SMALL_ROUND</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-w-e-a-r_-o-s_-s-m-a-l-l_-r-o-u-n-d/#wear_os_small_round","title":"WEAR_OS_SMALL_ROUND","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val WEAR_OS_SMALL_ROUND: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-w-e-a-r_-o-s_-s-q-u-a-r-e/","title":"WEAR_OS_SQUARE - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/DeviceConfig/Companion/WEAR_OS_SQUARE</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-w-e-a-r_-o-s_-s-q-u-a-r-e/#wear_os_square","title":"WEAR_OS_SQUARE","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val WEAR_OS_SQUARE: DeviceConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/","title":"Environment - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/#environment","title":"Environment","text":"<p>[jvm]\\ class Environment(val platformDir: String, val appTestDir: String, val packageName: String, val compileSdkVersion: Int, val resourcePackageNames: List&lt;String&gt;, val localResourceDirs: List&lt;String&gt;, val moduleResourceDirs: List&lt;String&gt;, val libraryResourceDirs: List&lt;String&gt;, val allModuleAssetDirs: List&lt;String&gt;, val libraryAssetDirs: List&lt;String&gt;)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/#constructors","title":"Constructors","text":"Environment [jvm]constructor(platformDir: String, appTestDir: String, packageName: String, compileSdkVersion: Int, resourcePackageNames: List&lt;String&gt;, localResourceDirs: List&lt;String&gt;, moduleResourceDirs: List&lt;String&gt;, libraryResourceDirs: List&lt;String&gt;, allModuleAssetDirs: List&lt;String&gt;, libraryAssetDirs: List&lt;String&gt;)"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/#properties","title":"Properties","text":"Name Summary allModuleAssetDirs [jvm]val allModuleAssetDirs: List&lt;String&gt; appTestDir [jvm]val appTestDir: String compileSdkVersion [jvm]val compileSdkVersion: Int libraryAssetDirs [jvm]val libraryAssetDirs: List&lt;String&gt; libraryResourceDirs [jvm]val libraryResourceDirs: List&lt;String&gt; localResourceDirs [jvm]val localResourceDirs: List&lt;String&gt; moduleResourceDirs [jvm]val moduleResourceDirs: List&lt;String&gt; packageName [jvm]val packageName: String platformDir [jvm]val platformDir: String resourcePackageNames [jvm]val resourcePackageNames: List&lt;String&gt;"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/#functions","title":"Functions","text":"Name Summary copy [jvm]fun copy(platformDir: String = this.platformDir, appTestDir: String = this.appTestDir, packageName: String = this.packageName, compileSdkVersion: Int = this.compileSdkVersion, resourcePackageNames: List&lt;String&gt; = this.resourcePackageNames, localResourceDirs: List&lt;String&gt; = this.localResourceDirs, moduleResourceDirs: List&lt;String&gt; = this.moduleResourceDirs, libraryResourceDirs: List&lt;String&gt; = this.libraryResourceDirs, allModuleAssetDirs: List&lt;String&gt; = this.allModuleAssetDirs, libraryAssetDirs: List&lt;String&gt; = this.libraryAssetDirs): Environment"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/-environment/","title":"Environment - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/Environment</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/-environment/#environment","title":"Environment","text":"<p>[jvm]\\ constructor(platformDir: String, appTestDir: String, packageName: String, compileSdkVersion: Int, resourcePackageNames: List&lt;String&gt;, localResourceDirs: List&lt;String&gt;, moduleResourceDirs: List&lt;String&gt;, libraryResourceDirs: List&lt;String&gt;, allModuleAssetDirs: List&lt;String&gt;, libraryAssetDirs: List&lt;String&gt;)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/all-module-asset-dirs/","title":"allModuleAssetDirs - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/allModuleAssetDirs</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/all-module-asset-dirs/#allmoduleassetdirs","title":"allModuleAssetDirs","text":"<p>[jvm]\\ val allModuleAssetDirs: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/app-test-dir/","title":"appTestDir - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/appTestDir</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/app-test-dir/#apptestdir","title":"appTestDir","text":"<p>[jvm]\\ val appTestDir: String</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/compile-sdk-version/","title":"compileSdkVersion - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/compileSdkVersion</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/compile-sdk-version/#compilesdkversion","title":"compileSdkVersion","text":"<p>[jvm]\\ val compileSdkVersion: Int</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/copy/","title":"copy - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/copy</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/copy/#copy","title":"copy","text":"<p>[jvm]\\ fun copy(platformDir: String = this.platformDir, appTestDir: String = this.appTestDir, packageName: String = this.packageName, compileSdkVersion: Int = this.compileSdkVersion, resourcePackageNames: List&lt;String&gt; = this.resourcePackageNames, localResourceDirs: List&lt;String&gt; = this.localResourceDirs, moduleResourceDirs: List&lt;String&gt; = this.moduleResourceDirs, libraryResourceDirs: List&lt;String&gt; = this.libraryResourceDirs, allModuleAssetDirs: List&lt;String&gt; = this.allModuleAssetDirs, libraryAssetDirs: List&lt;String&gt; = this.libraryAssetDirs): Environment</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/library-asset-dirs/","title":"libraryAssetDirs - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/libraryAssetDirs</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/library-asset-dirs/#libraryassetdirs","title":"libraryAssetDirs","text":"<p>[jvm]\\ val libraryAssetDirs: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/library-resource-dirs/","title":"libraryResourceDirs - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/libraryResourceDirs</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/library-resource-dirs/#libraryresourcedirs","title":"libraryResourceDirs","text":"<p>[jvm]\\ val libraryResourceDirs: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/local-resource-dirs/","title":"localResourceDirs - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/localResourceDirs</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/local-resource-dirs/#localresourcedirs","title":"localResourceDirs","text":"<p>[jvm]\\ val localResourceDirs: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/module-resource-dirs/","title":"moduleResourceDirs - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/moduleResourceDirs</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/module-resource-dirs/#moduleresourcedirs","title":"moduleResourceDirs","text":"<p>[jvm]\\ val moduleResourceDirs: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/package-name/","title":"packageName - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/packageName</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/package-name/#packagename","title":"packageName","text":"<p>[jvm]\\ val packageName: String</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/platform-dir/","title":"platformDir - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/platformDir</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/platform-dir/#platformdir","title":"platformDir","text":"<p>[jvm]\\ val platformDir: String</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/resource-package-names/","title":"resourcePackageNames - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Environment/resourcePackageNames</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/resource-package-names/#resourcepackagenames","title":"resourcePackageNames","text":"<p>[jvm]\\ val resourcePackageNames: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/","title":"Flags - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Flags</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/#flags","title":"Flags","text":"<p>[jvm]\\ object Flags</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/#properties","title":"Properties","text":"Name Summary DEBUG_LINKED_OBJECTS [jvm]const val DEBUG_LINKED_OBJECTS: String"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/-d-e-b-u-g_-l-i-n-k-e-d_-o-b-j-e-c-t-s/","title":"DEBUG_LINKED_OBJECTS - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Flags/DEBUG_LINKED_OBJECTS</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/-d-e-b-u-g_-l-i-n-k-e-d_-o-b-j-e-c-t-s/#debug_linked_objects","title":"DEBUG_LINKED_OBJECTS","text":"<p>[jvm]\\ const val DEBUG_LINKED_OBJECTS: String</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/","title":"HtmlReportWriter - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/HtmlReportWriter</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/#htmlreportwriter","title":"HtmlReportWriter","text":"<p>[jvm]\\ class HtmlReportWriter@JvmOverloadsconstructor(runName: String = defaultRunName(), rootDirectory: File = File(System.getProperty(\"paparazzi.report.dir\")), snapshotRootDirectory: File = File(System.getProperty(\"paparazzi.snapshot.dir\"))) : SnapshotHandler</p> <p>Creates an HTML report that avoids writing files that have already been written.</p> <p>Images and videos are named by hashes of their contents. Paparazzi won\u2019t write two images or videos with the same contents. Note that the images/ directory includes the individual frames of each video.</p> <p>Runs are named by their date.</p> <pre><code>images\n  088c60580f06efa95c37fd8e754074729ee74a06.png\n  93f9a81cb594280f4b3898d90dfad8c8ea969b01.png\n  22d37abd0841ba2a8d0bd635954baf7cbfaa269b.png\n  a4769e43cc5901ef28c0d46c46a44ea6429cbccc.png\nvideos\n  d1cddc5da2224053f2af51f4e69a76de4e61fc41.mov\nruns\n  20190626002322_b9854e.js\n  20190626002345_b1e882.js\nindex.html\nindex.js\npaparazzi.js\n</code></pre>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/#constructors","title":"Constructors","text":"HtmlReportWriter [jvm]@JvmOverloadsconstructor(runName: String = defaultRunName(), rootDirectory: File = File(System.getProperty(\"paparazzi.report.dir\")), snapshotRootDirectory: File = File(System.getProperty(\"paparazzi.snapshot.dir\")))"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/#functions","title":"Functions","text":"Name Summary close [jvm]open override fun close()Release all resources and block until everything has been written to the file system. newFrameHandler [jvm]open override fun newFrameHandler(snapshot: Snapshot, frameCount: Int, fps: Int): SnapshotHandler.FrameHandler"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/-html-report-writer/","title":"HtmlReportWriter - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/HtmlReportWriter/HtmlReportWriter</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/-html-report-writer/#htmlreportwriter","title":"HtmlReportWriter","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>constructor(runName: String = defaultRunName(), rootDirectory: File = File(System.getProperty(\"paparazzi.report.dir\")), snapshotRootDirectory: File = File(System.getProperty(\"paparazzi.snapshot.dir\")))</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/close/","title":"close - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/HtmlReportWriter/close</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/close/#close","title":"close","text":"<p>[jvm]\\ open override fun close()</p> <p>Release all resources and block until everything has been written to the file system.</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/new-frame-handler/","title":"newFrameHandler - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/HtmlReportWriter/newFrameHandler</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/new-frame-handler/#newframehandler","title":"newFrameHandler","text":"<p>[jvm]\\ open override fun newFrameHandler(snapshot: Snapshot, frameCount: Int, fps: Int): SnapshotHandler.FrameHandler</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/","title":"InstantAnimationsRule - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/InstantAnimationsRule</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/#instantanimationsrule","title":"InstantAnimationsRule","text":"<p>[jvm]\\ class InstantAnimationsRule : TestRule</p> <p>Sets animation duration scale to 0 so all animations run instantly. Use this with Paparazzi to skip animations and snapshot their terminal state.</p> <p>Note that animation side effects are still performed, including calls like AnimatorListener.onAnimationEnd. This way views from fade-ins and moves are rendered as they do when the animations complete.</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/#constructors","title":"Constructors","text":"InstantAnimationsRule [jvm]constructor()"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/#functions","title":"Functions","text":"Name Summary apply [jvm]open override fun apply(base: Statement, description: Description): Statement"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/-instant-animations-rule/","title":"InstantAnimationsRule - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/InstantAnimationsRule/InstantAnimationsRule</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/-instant-animations-rule/#instantanimationsrule","title":"InstantAnimationsRule","text":"<p>[jvm]\\ constructor()</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/apply/","title":"apply - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/InstantAnimationsRule/apply</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/apply/#apply","title":"apply","text":"<p>[jvm]\\ open override fun apply(base: Statement, description: Description): Statement</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/","title":"Paparazzi - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/#paparazzi","title":"Paparazzi","text":"<p>[jvm]\\ class Paparazzi@JvmOverloadsconstructor(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set&lt;RenderExtension&gt; = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = false, validateAccessibility: Boolean = false) : TestRule</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/#constructors","title":"Constructors","text":"Paparazzi [jvm]@JvmOverloadsconstructor(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set&lt;RenderExtension&gt; = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = false, validateAccessibility: Boolean = false)"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/#properties","title":"Properties","text":"Name Summary context [jvm]val context: Context layoutInflater [jvm]val layoutInflater: LayoutInflater resources [jvm]val resources: Resources"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/#functions","title":"Functions","text":"Name Summary apply [jvm]open override fun apply(base: Statement, description: Description): Statement close [jvm]fun close() gif [jvm]@JvmOverloadsfun gif(view: View, name: String? = null, start: Long = 0, end: Long = 500, fps: Int = 30) inflate [jvm]fun &lt;V : View&gt; inflate(@LayoutReslayoutId: Int): V prepare [jvm]fun prepare(description: Description) snapshot [jvm]fun snapshot(name: String? = null, composable: @Composable() -&gt; Unit)@JvmOverloadsfun snapshot(view: View, name: String? = null, offsetMillis: Long = 0) unsafeUpdateConfig [jvm]fun unsafeUpdateConfig(deviceConfig: DeviceConfig? = null, theme: String? = null, renderingMode: SessionParams.RenderingMode? = null)"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/-paparazzi/","title":"Paparazzi - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/Paparazzi</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/-paparazzi/#paparazzi","title":"Paparazzi","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>constructor(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set&lt;RenderExtension&gt; = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = false, validateAccessibility: Boolean = false)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/apply/","title":"apply - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/apply</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/apply/#apply","title":"apply","text":"<p>[jvm]\\ open override fun apply(base: Statement, description: Description): Statement</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/close/","title":"close - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/close</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/close/#close","title":"close","text":"<p>[jvm]\\ fun close()</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/context/","title":"context - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/context</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/context/#context","title":"context","text":"<p>[jvm]\\ val context: Context</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/gif/","title":"gif - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/gif</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/gif/#gif","title":"gif","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun gif(view: View, name: String? = null, start: Long = 0, end: Long = 500, fps: Int = 30)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/inflate/","title":"inflate - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/inflate</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/inflate/#inflate","title":"inflate","text":"<p>[jvm]\\ fun &lt;V : View&gt; inflate(@LayoutReslayoutId: Int): V</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/layout-inflater/","title":"layoutInflater - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/layoutInflater</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/layout-inflater/#layoutinflater","title":"layoutInflater","text":"<p>[jvm]\\ val layoutInflater: LayoutInflater</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/prepare/","title":"prepare - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/prepare</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/prepare/#prepare","title":"prepare","text":"<p>[jvm]\\ fun prepare(description: Description)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/resources/","title":"resources - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/resources</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/resources/#resources","title":"resources","text":"<p>[jvm]\\ val resources: Resources</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/snapshot/","title":"snapshot - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/snapshot</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/snapshot/#snapshot","title":"snapshot","text":"<p>[jvm]\\ fun snapshot(name: String? = null, composable: @Composable() -&gt; Unit)</p> <p>@JvmOverloads</p> <p>fun snapshot(view: View, name: String? = null, offsetMillis: Long = 0)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/unsafe-update-config/","title":"unsafeUpdateConfig - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Paparazzi/unsafeUpdateConfig</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/unsafe-update-config/#unsafeupdateconfig","title":"unsafeUpdateConfig","text":"<p>[jvm]\\ fun unsafeUpdateConfig(deviceConfig: DeviceConfig? = null, theme: String? = null, renderingMode: SessionParams.RenderingMode? = null)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/","title":"RenderExtension - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/RenderExtension</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/#renderextension","title":"RenderExtension","text":"<p>interface RenderExtension</p> <p>An extension for overlaying additional information on top of each rendered frame.</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/#inheritors","title":"Inheritors","text":"AccessibilityRenderExtension"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/#functions","title":"Functions","text":"Name Summary renderView [jvm]abstract fun renderView(contentView: View): ViewAllows this extension to modify the view hierarchy represented by contentView."},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/render-view/","title":"renderView - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/RenderExtension/renderView</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/render-view/#renderview","title":"renderView","text":"<p>[jvm]\\ abstract fun renderView(contentView: View): View</p> <p>Allows this extension to modify the view hierarchy represented by contentView.</p> <p>Returns the root view of the modified hierarchy.</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/","title":"Snapshot - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Snapshot</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/#snapshot","title":"Snapshot","text":"<p>[jvm]\\ class Snapshot(val name: String?, val testName: TestName, val timestamp: Date, val tags: List&lt;String&gt; = listOf(), val file: String? = null)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/#constructors","title":"Constructors","text":"Snapshot [jvm]constructor(name: String?, testName: TestName, timestamp: Date, tags: List&lt;String&gt; = listOf(), file: String? = null)"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/#properties","title":"Properties","text":"Name Summary file [jvm]val file: String? = null name [jvm]val name: String? tags [jvm]val tags: List&lt;String&gt; testName [jvm]val testName: TestName timestamp [jvm]val timestamp: Date"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/#functions","title":"Functions","text":"Name Summary copy [jvm]fun copy(name: String? = this.name, testName: TestName = this.testName, timestamp: Date = this.timestamp, tags: List&lt;String&gt; = this.tags, file: String? = this.file): Snapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/-snapshot/","title":"Snapshot - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Snapshot/Snapshot</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/-snapshot/#snapshot","title":"Snapshot","text":"<p>[jvm]\\ constructor(name: String?, testName: TestName, timestamp: Date, tags: List&lt;String&gt; = listOf(), file: String? = null)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/copy/","title":"copy - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Snapshot/copy</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/copy/#copy","title":"copy","text":"<p>[jvm]\\ fun copy(name: String? = this.name, testName: TestName = this.testName, timestamp: Date = this.timestamp, tags: List&lt;String&gt; = this.tags, file: String? = this.file): Snapshot</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/file/","title":"file - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Snapshot/file</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/file/#file","title":"file","text":"<p>[jvm]\\ val file: String? = null</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/name/","title":"name - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Snapshot/name</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/name/#name","title":"name","text":"<p>[jvm]\\ val name: String?</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/tags/","title":"tags - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Snapshot/tags</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/tags/#tags","title":"tags","text":"<p>[jvm]\\ val tags: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/test-name/","title":"testName - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Snapshot/testName</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/test-name/#testname","title":"testName","text":"<p>[jvm]\\ val testName: TestName</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/timestamp/","title":"timestamp - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/Snapshot/timestamp</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/timestamp/#timestamp","title":"timestamp","text":"<p>[jvm]\\ val timestamp: Date</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/","title":"SnapshotHandler - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/SnapshotHandler</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#snapshothandler","title":"SnapshotHandler","text":"<p>interface SnapshotHandler : Closeable</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#inheritors","title":"Inheritors","text":"HtmlReportWriter SnapshotVerifier"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#types","title":"Types","text":"Name Summary FrameHandler [jvm]interface FrameHandler : Closeable"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#functions","title":"Functions","text":"Name Summary close [jvm]abstract override fun close() newFrameHandler [jvm]abstract fun newFrameHandler(snapshot: Snapshot, frameCount: Int, fps: Int): SnapshotHandler.FrameHandler"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/new-frame-handler/","title":"newFrameHandler - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/SnapshotHandler/newFrameHandler</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/new-frame-handler/#newframehandler","title":"newFrameHandler","text":"<p>[jvm]\\ abstract fun newFrameHandler(snapshot: Snapshot, frameCount: Int, fps: Int): SnapshotHandler.FrameHandler</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/","title":"FrameHandler - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/SnapshotHandler/FrameHandler</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/#framehandler","title":"FrameHandler","text":"<p>[jvm]\\ interface FrameHandler : Closeable</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/#functions","title":"Functions","text":"Name Summary close [jvm]abstract override fun close() handle [jvm]abstract fun handle(image: BufferedImage)"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/handle/","title":"handle - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/SnapshotHandler/FrameHandler/handle</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/handle/#handle","title":"handle","text":"<p>[jvm]\\ abstract fun handle(image: BufferedImage)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/","title":"SnapshotVerifier - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/SnapshotVerifier</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/#snapshotverifier","title":"SnapshotVerifier","text":"<p>[jvm]\\ class SnapshotVerifier@JvmOverloadsconstructor(maxPercentDifference: Double, rootDirectory: File = File(System.getProperty(\"paparazzi.snapshot.dir\"))) : SnapshotHandler</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/#constructors","title":"Constructors","text":"SnapshotVerifier [jvm]@JvmOverloadsconstructor(maxPercentDifference: Double, rootDirectory: File = File(System.getProperty(\"paparazzi.snapshot.dir\")))"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/#functions","title":"Functions","text":"Name Summary close [jvm]open override fun close() newFrameHandler [jvm]open override fun newFrameHandler(snapshot: Snapshot, frameCount: Int, fps: Int): SnapshotHandler.FrameHandler"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/-snapshot-verifier/","title":"SnapshotVerifier - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/SnapshotVerifier/SnapshotVerifier</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/-snapshot-verifier/#snapshotverifier","title":"SnapshotVerifier","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>constructor(maxPercentDifference: Double, rootDirectory: File = File(System.getProperty(\"paparazzi.snapshot.dir\")))</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/close/","title":"close - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/SnapshotVerifier/close</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/close/#close","title":"close","text":"<p>[jvm]\\ open override fun close()</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/new-frame-handler/","title":"newFrameHandler - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/SnapshotVerifier/newFrameHandler</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/new-frame-handler/#newframehandler","title":"newFrameHandler","text":"<p>[jvm]\\ open override fun newFrameHandler(snapshot: Snapshot, frameCount: Int, fps: Int): SnapshotHandler.FrameHandler</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/","title":"TestName - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/TestName</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/#testname","title":"TestName","text":"<p>[jvm]\\ class TestName(val packageName: String, val className: String, val methodName: String)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/#constructors","title":"Constructors","text":"TestName [jvm]constructor(packageName: String, className: String, methodName: String)"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/#properties","title":"Properties","text":"Name Summary className [jvm]val className: String methodName [jvm]val methodName: String packageName [jvm]val packageName: String"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/#functions","title":"Functions","text":"Name Summary copy [jvm]fun copy(packageName: String = this.packageName, className: String = this.className, methodName: String = this.methodName): TestName"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/-test-name/","title":"TestName - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/TestName/TestName</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/-test-name/#testname","title":"TestName","text":"<p>[jvm]\\ constructor(packageName: String, className: String, methodName: String)</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/class-name/","title":"className - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/TestName/className</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/class-name/#classname","title":"className","text":"<p>[jvm]\\ val className: String</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/copy/","title":"copy - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/TestName/copy</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/copy/#copy","title":"copy","text":"<p>[jvm]\\ fun copy(packageName: String = this.packageName, className: String = this.className, methodName: String = this.methodName): TestName</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/method-name/","title":"methodName - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/TestName/methodName</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/method-name/#methodname","title":"methodName","text":"<p>[jvm]\\ val methodName: String</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/package-name/","title":"packageName - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi/TestName/packageName</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/package-name/#packagename","title":"packageName","text":"<p>[jvm]\\ val packageName: String</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/","title":"Package-level declarations - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi.accessibility</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/#types","title":"Types","text":"Name Summary AccessibilityRenderExtension [jvm]class AccessibilityRenderExtension : RenderExtension"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/","title":"AccessibilityRenderExtension - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi.accessibility/AccessibilityRenderExtension</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/#accessibilityrenderextension","title":"AccessibilityRenderExtension","text":"<p>[jvm]\\ class AccessibilityRenderExtension : RenderExtension</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/#constructors","title":"Constructors","text":"AccessibilityRenderExtension [jvm]constructor()"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/#functions","title":"Functions","text":"Name Summary renderView [jvm]open override fun renderView(contentView: View): ViewAllows this extension to modify the view hierarchy represented by contentView."},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/-accessibility-render-extension/","title":"AccessibilityRenderExtension - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi.accessibility/AccessibilityRenderExtension/AccessibilityRenderExtension</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/-accessibility-render-extension/#accessibilityrenderextension","title":"AccessibilityRenderExtension","text":"<p>[jvm]\\ constructor()</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/render-view/","title":"renderView - Paparazzi","text":"<p>//paparazzi/app.cash.paparazzi.accessibility/AccessibilityRenderExtension/renderView</p>"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/render-view/#renderview","title":"renderView","text":"<p>[jvm]\\ open override fun renderView(contentView: View): View</p> <p>Allows this extension to modify the view hierarchy represented by contentView.</p> <p>Returns the root view of the modified hierarchy.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/","title":"Package-level declarations - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/#types","title":"Types","text":"Name Summary Clip [jvm]data class Clip(val spec: ClipSpec, val images: Flow&lt;BufferedImage&gt;) ClipSpec [jvm]data class ClipSpec(val frameSpec: FrameSpec, val start: Long, val frameDelayNanos: Long, val frameCount: Int) Device [jvm]class Device(environment: Environment = detectEnvironment(), validateAccessibility: Boolean = false, frameSpec: FrameSpec, renderExtensions: Set&lt;RenderExtension&gt; = setOf()) : Snapshotter DeviceConfig [jvm]data class DeviceConfig(val screenHeight: Int = 1280, val screenWidth: Int = 768, val xdpi: Int = 320, val ydpi: Int = 320, val orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, val uiMode: UiMode = UiMode.NORMAL, val nightMode: NightMode = NightMode.NOTNIGHT, val density: Density = Density.XHIGH, val fontScale: Float = 1.0f, val layoutDirection: LayoutDirection = LayoutDirection.LTR, val locale: String? = null, val ratio: ScreenRatio = ScreenRatio.NOTLONG, val size: ScreenSize = ScreenSize.NORMAL, val keyboard: Keyboard = Keyboard.NOKEY, val touchScreen: TouchScreen = TouchScreen.FINGER, val keyboardState: KeyboardState = KeyboardState.SOFT, val softButtons: Boolean = true, val navigation: Navigation = Navigation.NONAV, val screenRound: ScreenRound? = null, val released: String = \"November 13, 2012\")Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse <code>build.prop</code> and <code>attrs.xml</code> to generate the appropriate maps. Environment [jvm]data class Environment(val platformDir: String, val appTestDir: String, val resDir: String, val assetsDir: String, val packageName: String, val compileSdkVersion: Int, val resourcePackageNames: List&lt;String&gt;, val localResourceDirs: List&lt;String&gt;, val moduleResourceDirs: List&lt;String&gt;, val libraryResourceDirs: List&lt;String&gt;, val allModuleAssetDirs: List&lt;String&gt;, val libraryAssetDirs: List&lt;String&gt;) FrameSpec [jvm]data class FrameSpec(val deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, val renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, val theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", val supportsRtl: Boolean = false, val showSystemUi: Boolean = false, val appCompatEnabled: Boolean = true) InterceptorRegistrar [jvm]object InterceptorRegistrar RenderExtension [jvm]interface RenderExtensionAn extension for overlaying additional information on top of each rendered frame. Snapshot [jvm]data class Snapshot(val spec: FrameSpec, val image: BufferedImage) Snapshotter [jvm]interface Snapshotter"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/#functions","title":"Functions","text":"Name Summary androidHome [jvm]fun androidHome(): String detectEnvironment [jvm]fun detectEnvironment(): Environment"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/android-home/","title":"androidHome - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/androidHome</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/android-home/#androidhome","title":"androidHome","text":"<p>[jvm]\\ fun androidHome(): String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/detect-environment/","title":"detectEnvironment - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/detectEnvironment</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/detect-environment/#detectenvironment","title":"detectEnvironment","text":"<p>[jvm]\\ fun detectEnvironment(): Environment</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip/","title":"Clip - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Clip</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip/#clip","title":"Clip","text":"<p>[jvm]\\ data class Clip(val spec: ClipSpec, val images: Flow&lt;BufferedImage&gt;)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip/#constructors","title":"Constructors","text":"Clip [jvm]constructor(spec: ClipSpec, images: Flow&lt;BufferedImage&gt;)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip/#properties","title":"Properties","text":"Name Summary images [jvm]val images: Flow&lt;BufferedImage&gt; spec [jvm]val spec: ClipSpec"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip/-clip/","title":"Clip - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Clip/Clip</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip/-clip/#clip","title":"Clip","text":"<p>[jvm]\\ constructor(spec: ClipSpec, images: Flow&lt;BufferedImage&gt;)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip/images/","title":"images - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Clip/images</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip/images/#images","title":"images","text":"<p>[jvm]\\ val images: Flow&lt;BufferedImage&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip/spec/","title":"spec - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Clip/spec</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip/spec/#spec","title":"spec","text":"<p>[jvm]\\ val spec: ClipSpec</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/","title":"ClipSpec - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/ClipSpec</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/#clipspec","title":"ClipSpec","text":"<p>[jvm]\\ data class ClipSpec(val frameSpec: FrameSpec, val start: Long, val frameDelayNanos: Long, val frameCount: Int)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/#constructors","title":"Constructors","text":"ClipSpec [jvm]constructor(frameSpec: FrameSpec, fps: Int, start: Long, end: Long)constructor(frameSpec: FrameSpec, start: Long, frameDelayNanos: Long, frameCount: Int)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/#properties","title":"Properties","text":"Name Summary frameCount [jvm]val frameCount: Int frameDelayNanos [jvm]val frameDelayNanos: Long frameSpec [jvm]val frameSpec: FrameSpec frameTimeNanos [jvm]val frameTimeNanos: Sequence&lt;Long&gt; start [jvm]val start: Long"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/-clip-spec/","title":"ClipSpec - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/ClipSpec/ClipSpec</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/-clip-spec/#clipspec","title":"ClipSpec","text":"<p>[jvm]\\ constructor(frameSpec: FrameSpec, fps: Int, start: Long, end: Long)</p> <p>constructor(frameSpec: FrameSpec, start: Long, frameDelayNanos: Long, frameCount: Int)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/frame-count/","title":"frameCount - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/ClipSpec/frameCount</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/frame-count/#framecount","title":"frameCount","text":"<p>[jvm]\\ val frameCount: Int</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/frame-delay-nanos/","title":"frameDelayNanos - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/ClipSpec/frameDelayNanos</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/frame-delay-nanos/#framedelaynanos","title":"frameDelayNanos","text":"<p>[jvm]\\ val frameDelayNanos: Long</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/frame-spec/","title":"frameSpec - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/ClipSpec/frameSpec</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/frame-spec/#framespec","title":"frameSpec","text":"<p>[jvm]\\ val frameSpec: FrameSpec</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/frame-time-nanos/","title":"frameTimeNanos - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/ClipSpec/frameTimeNanos</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/frame-time-nanos/#frametimenanos","title":"frameTimeNanos","text":"<p>[jvm]\\ val frameTimeNanos: Sequence&lt;Long&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/start/","title":"start - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/ClipSpec/start</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-clip-spec/start/#start","title":"start","text":"<p>[jvm]\\ val start: Long</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/","title":"Device - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Device</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/#device","title":"Device","text":"<p>[jvm]\\ class Device(environment: Environment = detectEnvironment(), validateAccessibility: Boolean = false, frameSpec: FrameSpec, renderExtensions: Set&lt;RenderExtension&gt; = setOf()) : Snapshotter</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/#constructors","title":"Constructors","text":"Device [jvm]constructor(environment: Environment = detectEnvironment(), validateAccessibility: Boolean = false, frameSpec: FrameSpec, renderExtensions: Set&lt;RenderExtension&gt; = setOf())"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/#properties","title":"Properties","text":"Name Summary context [jvm]val context: Context layoutInflater [jvm]val layoutInflater: LayoutInflater resources [jvm]val resources: Resources"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/#functions","title":"Functions","text":"Name Summary clip [jvm]open override fun clip(view: View, clipSpec: ClipSpec): Clipopen override fun clip(composable: @Composable() -&gt; Unit, clipSpec: ClipSpec): Clip close [jvm]fun close() inflate [jvm]fun &lt;V : View&gt; inflate(@LayoutReslayoutId: Int): V snapshot [jvm]open override fun snapshot(view: View, timestampNanos: Long): Snapshotopen override fun snapshot(composable: @Composable() -&gt; Unit, timestampNanos: Long): Snapshot"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/-device/","title":"Device - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Device/Device</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/-device/#device","title":"Device","text":"<p>[jvm]\\ constructor(environment: Environment = detectEnvironment(), validateAccessibility: Boolean = false, frameSpec: FrameSpec, renderExtensions: Set&lt;RenderExtension&gt; = setOf())</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/clip/","title":"clip - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Device/clip</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/clip/#clip","title":"clip","text":"<p>[jvm]\\ open override fun clip(view: View, clipSpec: ClipSpec): Clip</p> <p>open override fun clip(composable: @Composable() -&gt; Unit, clipSpec: ClipSpec): Clip</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/close/","title":"close - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Device/close</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/close/#close","title":"close","text":"<p>[jvm]\\ fun close()</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/context/","title":"context - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Device/context</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/context/#context","title":"context","text":"<p>[jvm]\\ val context: Context</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/inflate/","title":"inflate - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Device/inflate</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/inflate/#inflate","title":"inflate","text":"<p>[jvm]\\ fun &lt;V : View&gt; inflate(@LayoutReslayoutId: Int): V</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/layout-inflater/","title":"layoutInflater - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Device/layoutInflater</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/layout-inflater/#layoutinflater","title":"layoutInflater","text":"<p>[jvm]\\ val layoutInflater: LayoutInflater</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/resources/","title":"resources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Device/resources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/resources/#resources","title":"resources","text":"<p>[jvm]\\ val resources: Resources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/snapshot/","title":"snapshot - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Device/snapshot</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device/snapshot/#snapshot","title":"snapshot","text":"<p>[jvm]\\ open override fun snapshot(composable: @Composable() -&gt; Unit, timestampNanos: Long): Snapshot</p> <p>open override fun snapshot(view: View, timestampNanos: Long): Snapshot</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/","title":"DeviceConfig - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/#deviceconfig","title":"DeviceConfig","text":"<p>[jvm]\\ data class DeviceConfig(val screenHeight: Int = 1280, val screenWidth: Int = 768, val xdpi: Int = 320, val ydpi: Int = 320, val orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, val uiMode: UiMode = UiMode.NORMAL, val nightMode: NightMode = NightMode.NOTNIGHT, val density: Density = Density.XHIGH, val fontScale: Float = 1.0f, val layoutDirection: LayoutDirection = LayoutDirection.LTR, val locale: String? = null, val ratio: ScreenRatio = ScreenRatio.NOTLONG, val size: ScreenSize = ScreenSize.NORMAL, val keyboard: Keyboard = Keyboard.NOKEY, val touchScreen: TouchScreen = TouchScreen.FINGER, val keyboardState: KeyboardState = KeyboardState.SOFT, val softButtons: Boolean = true, val navigation: Navigation = Navigation.NONAV, val screenRound: ScreenRound? = null, val released: String = \"November 13, 2012\")</p> <p>Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse <code>build.prop</code> and <code>attrs.xml</code> to generate the appropriate maps.</p> <p>Defaults are for a Nexus 4 device.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/#constructors","title":"Constructors","text":"DeviceConfig [jvm]constructor(screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, uiMode: UiMode = UiMode.NORMAL, nightMode: NightMode = NightMode.NOTNIGHT, density: Density = Density.XHIGH, fontScale: Float = 1.0f, layoutDirection: LayoutDirection = LayoutDirection.LTR, locale: String? = null, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, screenRound: ScreenRound? = null, released: String = \"November 13, 2012\")"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/#types","title":"Types","text":"Name Summary Companion [jvm]object CompanionDevice specs per: https://android.googlesource.com/platform/tools/base/+/mirror-goog-studio-master-dev/sdklib/src/main/java/com/android/sdklib/devices/nexus.xml"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/#properties","title":"Properties","text":"Name Summary density [jvm]val density: Density folderConfiguration [jvm]val folderConfiguration: FolderConfiguration fontScale [jvm]val fontScale: Float = 1.0f hardwareConfig [jvm]val hardwareConfig: HardwareConfig keyboard [jvm]val keyboard: Keyboard keyboardState [jvm]val keyboardState: KeyboardState layoutDirection [jvm]val layoutDirection: LayoutDirection locale [jvm]val locale: String? = null navigation [jvm]val navigation: Navigation nightMode [jvm]val nightMode: NightMode orientation [jvm]val orientation: ScreenOrientation ratio [jvm]val ratio: ScreenRatio released [jvm]val released: String screenHeight [jvm]val screenHeight: Int = 1280 screenRound [jvm]val screenRound: ScreenRound? = null screenWidth [jvm]val screenWidth: Int = 768 size [jvm]val size: ScreenSize softButtons [jvm]val softButtons: Boolean = true touchScreen [jvm]val touchScreen: TouchScreen uiMode [jvm]val uiMode: UiMode uiModeMask [jvm]val uiModeMask: Int xdpi [jvm]val xdpi: Int = 320 ydpi [jvm]val ydpi: Int = 320"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-device-config/","title":"DeviceConfig - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-device-config/#deviceconfig","title":"DeviceConfig","text":"<p>[jvm]\\ constructor(screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, uiMode: UiMode = UiMode.NORMAL, nightMode: NightMode = NightMode.NOTNIGHT, density: Density = Density.XHIGH, fontScale: Float = 1.0f, layoutDirection: LayoutDirection = LayoutDirection.LTR, locale: String? = null, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, screenRound: ScreenRound? = null, released: String = \"November 13, 2012\")</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/density/","title":"density - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/density</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/density/#density","title":"density","text":"<p>[jvm]\\ val density: Density</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/folder-configuration/","title":"folderConfiguration - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/folderConfiguration</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/folder-configuration/#folderconfiguration","title":"folderConfiguration","text":"<p>[jvm]\\ val folderConfiguration: FolderConfiguration</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/font-scale/","title":"fontScale - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/fontScale</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/font-scale/#fontscale","title":"fontScale","text":"<p>[jvm]\\ val fontScale: Float = 1.0f</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/hardware-config/","title":"hardwareConfig - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/hardwareConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/hardware-config/#hardwareconfig","title":"hardwareConfig","text":"<p>[jvm]\\ val hardwareConfig: HardwareConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/keyboard-state/","title":"keyboardState - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/keyboardState</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/keyboard-state/#keyboardstate","title":"keyboardState","text":"<p>[jvm]\\ val keyboardState: KeyboardState</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/keyboard/","title":"keyboard - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/keyboard</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/keyboard/#keyboard","title":"keyboard","text":"<p>[jvm]\\ val keyboard: Keyboard</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/layout-direction/","title":"layoutDirection - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/layoutDirection</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/layout-direction/#layoutdirection","title":"layoutDirection","text":"<p>[jvm]\\ val layoutDirection: LayoutDirection</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/locale/","title":"locale - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/locale</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/locale/#locale","title":"locale","text":"<p>[jvm]\\ val locale: String? = null</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/navigation/","title":"navigation - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/navigation</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/navigation/#navigation","title":"navigation","text":"<p>[jvm]\\ val navigation: Navigation</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/night-mode/","title":"nightMode - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/nightMode</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/night-mode/#nightmode","title":"nightMode","text":"<p>[jvm]\\ val nightMode: NightMode</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/orientation/","title":"orientation - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/orientation</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/orientation/#orientation","title":"orientation","text":"<p>[jvm]\\ val orientation: ScreenOrientation</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/ratio/","title":"ratio - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/ratio</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/ratio/#ratio","title":"ratio","text":"<p>[jvm]\\ val ratio: ScreenRatio</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/released/","title":"released - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/released</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/released/#released","title":"released","text":"<p>[jvm]\\ val released: String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/screen-height/","title":"screenHeight - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/screenHeight</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/screen-height/#screenheight","title":"screenHeight","text":"<p>[jvm]\\ val screenHeight: Int = 1280</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/screen-round/","title":"screenRound - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/screenRound</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/screen-round/#screenround","title":"screenRound","text":"<p>[jvm]\\ val screenRound: ScreenRound? = null</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/screen-width/","title":"screenWidth - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/screenWidth</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/screen-width/#screenwidth","title":"screenWidth","text":"<p>[jvm]\\ val screenWidth: Int = 768</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/size/","title":"size - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/size</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/size/#size","title":"size","text":"<p>[jvm]\\ val size: ScreenSize</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/soft-buttons/","title":"softButtons - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/softButtons</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/soft-buttons/#softbuttons","title":"softButtons","text":"<p>[jvm]\\ val softButtons: Boolean = true</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/touch-screen/","title":"touchScreen - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/touchScreen</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/touch-screen/#touchscreen","title":"touchScreen","text":"<p>[jvm]\\ val touchScreen: TouchScreen</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/ui-mode-mask/","title":"uiModeMask - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/uiModeMask</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/ui-mode-mask/#uimodemask","title":"uiModeMask","text":"<p>[jvm]\\ val uiModeMask: Int</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/ui-mode/","title":"uiMode - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/uiMode</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/ui-mode/#uimode","title":"uiMode","text":"<p>[jvm]\\ val uiMode: UiMode</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/xdpi/","title":"xdpi - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/xdpi</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/xdpi/#xdpi","title":"xdpi","text":"<p>[jvm]\\ val xdpi: Int = 320</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/ydpi/","title":"ydpi - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/ydpi</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/ydpi/#ydpi","title":"ydpi","text":"<p>[jvm]\\ val ydpi: Int = 320</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/","title":"Companion - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p> <p>Device specs per: https://android.googlesource.com/platform/tools/base/+/mirror-goog-studio-master-dev/sdklib/src/main/java/com/android/sdklib/devices/nexus.xml</p> <p>Release dates obtained from Wikipedia.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/#properties","title":"Properties","text":"Name Summary GALAXY_WATCH4_CLASSIC_LARGE [jvm]val GALAXY_WATCH4_CLASSIC_LARGE: DeviceConfig NEXUS_10 [jvm]@JvmFieldval NEXUS_10: DeviceConfig NEXUS_4 [jvm]@JvmFieldval NEXUS_4: DeviceConfig NEXUS_5 [jvm]@JvmFieldval NEXUS_5: DeviceConfig NEXUS_5_LAND [jvm]@JvmFieldval NEXUS_5_LAND: DeviceConfig NEXUS_7 [jvm]@JvmFieldval NEXUS_7: DeviceConfig NEXUS_7_2012 [jvm]@JvmFieldval NEXUS_7_2012: DeviceConfig PIXEL [jvm]@JvmFieldval PIXEL: DeviceConfig PIXEL_2 [jvm]@JvmFieldval PIXEL_2: DeviceConfig PIXEL_2_XL [jvm]@JvmFieldval PIXEL_2_XL: DeviceConfig PIXEL_3 [jvm]@JvmFieldval PIXEL_3: DeviceConfig PIXEL_3_XL [jvm]@JvmFieldval PIXEL_3_XL: DeviceConfig PIXEL_3A [jvm]@JvmFieldval PIXEL_3A: DeviceConfig PIXEL_3A_XL [jvm]@JvmFieldval PIXEL_3A_XL: DeviceConfig PIXEL_4 [jvm]@JvmFieldval PIXEL_4: DeviceConfig PIXEL_4_XL [jvm]@JvmFieldval PIXEL_4_XL: DeviceConfig PIXEL_4A [jvm]@JvmFieldval PIXEL_4A: DeviceConfig PIXEL_5 [jvm]@JvmFieldval PIXEL_5: DeviceConfig PIXEL_6 [jvm]@JvmFieldval PIXEL_6: DeviceConfig PIXEL_6_PRO [jvm]@JvmFieldval PIXEL_6_PRO: DeviceConfig PIXEL_C [jvm]@JvmFieldval PIXEL_C: DeviceConfig PIXEL_XL [jvm]@JvmFieldval PIXEL_XL: DeviceConfig WEAR_OS_SMALL_ROUND [jvm]@JvmFieldval WEAR_OS_SMALL_ROUND: DeviceConfig WEAR_OS_SQUARE [jvm]@JvmFieldval WEAR_OS_SQUARE: DeviceConfig"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/#functions","title":"Functions","text":"Name Summary getEnumMap [jvm]fun getEnumMap(path: File): Map&lt;String, Map&lt;String, Int&gt;&gt; loadProperties [jvm]fun loadProperties(path: File): Map&lt;String, String&gt;"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-g-a-l-a-x-y_-w-a-t-c-h4_-c-l-a-s-s-i-c_-l-a-r-g-e/","title":"GALAXY_WATCH4_CLASSIC_LARGE - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/GALAXY_WATCH4_CLASSIC_LARGE</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-g-a-l-a-x-y_-w-a-t-c-h4_-c-l-a-s-s-i-c_-l-a-r-g-e/#galaxy_watch4_classic_large","title":"GALAXY_WATCH4_CLASSIC_LARGE","text":"<p>[jvm]\\ val GALAXY_WATCH4_CLASSIC_LARGE: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_10/","title":"NEXUS_10 - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/NEXUS_10</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_10/#nexus_10","title":"NEXUS_10","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_10: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_4/","title":"NEXUS_4 - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/NEXUS_4</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_4/#nexus_4","title":"NEXUS_4","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_4: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_5/","title":"NEXUS_5 - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/NEXUS_5</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_5/#nexus_5","title":"NEXUS_5","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_5: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_5_-l-a-n-d/","title":"NEXUS_5_LAND - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/NEXUS_5_LAND</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_5_-l-a-n-d/#nexus_5_land","title":"NEXUS_5_LAND","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_5_LAND: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_7/","title":"NEXUS_7 - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/NEXUS_7</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_7/#nexus_7","title":"NEXUS_7","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_7: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_7_2012/","title":"NEXUS_7_2012 - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/NEXUS_7_2012</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-n-e-x-u-s_7_2012/#nexus_7_2012","title":"NEXUS_7_2012","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val NEXUS_7_2012: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l/","title":"PIXEL - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l/#pixel","title":"PIXEL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_-c/","title":"PIXEL_C - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_C</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_-c/#pixel_c","title":"PIXEL_C","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_C: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_-x-l/","title":"PIXEL_XL - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_XL</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_-x-l/#pixel_xl","title":"PIXEL_XL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_XL: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_2/","title":"PIXEL_2 - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_2</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_2/#pixel_2","title":"PIXEL_2","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_2: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_2_-x-l/","title":"PIXEL_2_XL - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_2_XL</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_2_-x-l/#pixel_2_xl","title":"PIXEL_2_XL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_2_XL: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_3-a/","title":"PIXEL_3A - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_3A</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_3-a/#pixel_3a","title":"PIXEL_3A","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_3A: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_3-a_-x-l/","title":"PIXEL_3A_XL - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_3A_XL</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_3-a_-x-l/#pixel_3a_xl","title":"PIXEL_3A_XL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_3A_XL: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_3/","title":"PIXEL_3 - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_3</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_3/#pixel_3","title":"PIXEL_3","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_3: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_3_-x-l/","title":"PIXEL_3_XL - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_3_XL</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_3_-x-l/#pixel_3_xl","title":"PIXEL_3_XL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_3_XL: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_4-a/","title":"PIXEL_4A - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_4A</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_4-a/#pixel_4a","title":"PIXEL_4A","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_4A: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_4/","title":"PIXEL_4 - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_4</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_4/#pixel_4","title":"PIXEL_4","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_4: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_4_-x-l/","title":"PIXEL_4_XL - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_4_XL</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_4_-x-l/#pixel_4_xl","title":"PIXEL_4_XL","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_4_XL: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_5/","title":"PIXEL_5 - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_5</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_5/#pixel_5","title":"PIXEL_5","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_5: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_6/","title":"PIXEL_6 - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_6</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_6/#pixel_6","title":"PIXEL_6","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_6: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_6_-p-r-o/","title":"PIXEL_6_PRO - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/PIXEL_6_PRO</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-p-i-x-e-l_6_-p-r-o/#pixel_6_pro","title":"PIXEL_6_PRO","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val PIXEL_6_PRO: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-w-e-a-r_-o-s_-s-m-a-l-l_-r-o-u-n-d/","title":"WEAR_OS_SMALL_ROUND - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/WEAR_OS_SMALL_ROUND</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-w-e-a-r_-o-s_-s-m-a-l-l_-r-o-u-n-d/#wear_os_small_round","title":"WEAR_OS_SMALL_ROUND","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val WEAR_OS_SMALL_ROUND: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-w-e-a-r_-o-s_-s-q-u-a-r-e/","title":"WEAR_OS_SQUARE - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/WEAR_OS_SQUARE</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/-w-e-a-r_-o-s_-s-q-u-a-r-e/#wear_os_square","title":"WEAR_OS_SQUARE","text":"<p>[jvm]\\</p> <p>@JvmField</p> <p>val WEAR_OS_SQUARE: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/get-enum-map/","title":"getEnumMap - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/getEnumMap</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/get-enum-map/#getenummap","title":"getEnumMap","text":"<p>[jvm]\\ fun getEnumMap(path: File): Map&lt;String, Map&lt;String, Int&gt;&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/load-properties/","title":"loadProperties - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/DeviceConfig/Companion/loadProperties</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-device-config/-companion/load-properties/#loadproperties","title":"loadProperties","text":"<p>[jvm]\\ fun loadProperties(path: File): Map&lt;String, String&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/","title":"Environment - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/#environment","title":"Environment","text":"<p>[jvm]\\ data class Environment(val platformDir: String, val appTestDir: String, val resDir: String, val assetsDir: String, val packageName: String, val compileSdkVersion: Int, val resourcePackageNames: List&lt;String&gt;, val localResourceDirs: List&lt;String&gt;, val moduleResourceDirs: List&lt;String&gt;, val libraryResourceDirs: List&lt;String&gt;, val allModuleAssetDirs: List&lt;String&gt;, val libraryAssetDirs: List&lt;String&gt;)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/#constructors","title":"Constructors","text":"Environment [jvm]constructor(platformDir: String, appTestDir: String, resDir: String, assetsDir: String, packageName: String, compileSdkVersion: Int, resourcePackageNames: List&lt;String&gt;, localResourceDirs: List&lt;String&gt;, moduleResourceDirs: List&lt;String&gt;, libraryResourceDirs: List&lt;String&gt;, allModuleAssetDirs: List&lt;String&gt;, libraryAssetDirs: List&lt;String&gt;)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/#properties","title":"Properties","text":"Name Summary allModuleAssetDirs [jvm]val allModuleAssetDirs: List&lt;String&gt; appTestDir [jvm]val appTestDir: String assetsDir [jvm]val assetsDir: String compileSdkVersion [jvm]val compileSdkVersion: Int libraryAssetDirs [jvm]val libraryAssetDirs: List&lt;String&gt; libraryResourceDirs [jvm]val libraryResourceDirs: List&lt;String&gt; localResourceDirs [jvm]val localResourceDirs: List&lt;String&gt; moduleResourceDirs [jvm]val moduleResourceDirs: List&lt;String&gt; packageName [jvm]val packageName: String platformDir [jvm]val platformDir: String resDir [jvm]val resDir: String resourcePackageNames [jvm]val resourcePackageNames: List&lt;String&gt;"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/-environment/","title":"Environment - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/Environment</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/-environment/#environment","title":"Environment","text":"<p>[jvm]\\ constructor(platformDir: String, appTestDir: String, resDir: String, assetsDir: String, packageName: String, compileSdkVersion: Int, resourcePackageNames: List&lt;String&gt;, localResourceDirs: List&lt;String&gt;, moduleResourceDirs: List&lt;String&gt;, libraryResourceDirs: List&lt;String&gt;, allModuleAssetDirs: List&lt;String&gt;, libraryAssetDirs: List&lt;String&gt;)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/all-module-asset-dirs/","title":"allModuleAssetDirs - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/allModuleAssetDirs</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/all-module-asset-dirs/#allmoduleassetdirs","title":"allModuleAssetDirs","text":"<p>[jvm]\\ val allModuleAssetDirs: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/app-test-dir/","title":"appTestDir - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/appTestDir</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/app-test-dir/#apptestdir","title":"appTestDir","text":"<p>[jvm]\\ val appTestDir: String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/assets-dir/","title":"assetsDir - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/assetsDir</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/assets-dir/#assetsdir","title":"assetsDir","text":"<p>[jvm]\\ val assetsDir: String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/compile-sdk-version/","title":"compileSdkVersion - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/compileSdkVersion</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/compile-sdk-version/#compilesdkversion","title":"compileSdkVersion","text":"<p>[jvm]\\ val compileSdkVersion: Int</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/library-asset-dirs/","title":"libraryAssetDirs - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/libraryAssetDirs</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/library-asset-dirs/#libraryassetdirs","title":"libraryAssetDirs","text":"<p>[jvm]\\ val libraryAssetDirs: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/library-resource-dirs/","title":"libraryResourceDirs - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/libraryResourceDirs</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/library-resource-dirs/#libraryresourcedirs","title":"libraryResourceDirs","text":"<p>[jvm]\\ val libraryResourceDirs: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/local-resource-dirs/","title":"localResourceDirs - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/localResourceDirs</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/local-resource-dirs/#localresourcedirs","title":"localResourceDirs","text":"<p>[jvm]\\ val localResourceDirs: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/module-resource-dirs/","title":"moduleResourceDirs - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/moduleResourceDirs</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/module-resource-dirs/#moduleresourcedirs","title":"moduleResourceDirs","text":"<p>[jvm]\\ val moduleResourceDirs: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/package-name/","title":"packageName - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/packageName</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/package-name/#packagename","title":"packageName","text":"<p>[jvm]\\ val packageName: String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/platform-dir/","title":"platformDir - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/platformDir</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/platform-dir/#platformdir","title":"platformDir","text":"<p>[jvm]\\ val platformDir: String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/res-dir/","title":"resDir - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/resDir</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/res-dir/#resdir","title":"resDir","text":"<p>[jvm]\\ val resDir: String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/resource-package-names/","title":"resourcePackageNames - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Environment/resourcePackageNames</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-environment/resource-package-names/#resourcepackagenames","title":"resourcePackageNames","text":"<p>[jvm]\\ val resourcePackageNames: List&lt;String&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/","title":"FrameSpec - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/FrameSpec</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/#framespec","title":"FrameSpec","text":"<p>[jvm]\\ data class FrameSpec(val deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, val renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, val theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", val supportsRtl: Boolean = false, val showSystemUi: Boolean = false, val appCompatEnabled: Boolean = true)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/#constructors","title":"Constructors","text":"FrameSpec [jvm]constructor(deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", supportsRtl: Boolean = false, showSystemUi: Boolean = false, appCompatEnabled: Boolean = true)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/#properties","title":"Properties","text":"Name Summary appCompatEnabled [jvm]val appCompatEnabled: Boolean = true deviceConfig [jvm]val deviceConfig: DeviceConfig renderingMode [jvm]val renderingMode: SessionParams.RenderingMode showSystemUi [jvm]val showSystemUi: Boolean = false supportsRtl [jvm]val supportsRtl: Boolean = false theme [jvm]val theme: String"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/-frame-spec/","title":"FrameSpec - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/FrameSpec/FrameSpec</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/-frame-spec/#framespec","title":"FrameSpec","text":"<p>[jvm]\\ constructor(deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", supportsRtl: Boolean = false, showSystemUi: Boolean = false, appCompatEnabled: Boolean = true)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/app-compat-enabled/","title":"appCompatEnabled - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/FrameSpec/appCompatEnabled</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/app-compat-enabled/#appcompatenabled","title":"appCompatEnabled","text":"<p>[jvm]\\ val appCompatEnabled: Boolean = true</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/device-config/","title":"deviceConfig - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/FrameSpec/deviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/device-config/#deviceconfig","title":"deviceConfig","text":"<p>[jvm]\\ val deviceConfig: DeviceConfig</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/rendering-mode/","title":"renderingMode - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/FrameSpec/renderingMode</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/rendering-mode/#renderingmode","title":"renderingMode","text":"<p>[jvm]\\ val renderingMode: SessionParams.RenderingMode</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/show-system-ui/","title":"showSystemUi - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/FrameSpec/showSystemUi</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/show-system-ui/#showsystemui","title":"showSystemUi","text":"<p>[jvm]\\ val showSystemUi: Boolean = false</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/supports-rtl/","title":"supportsRtl - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/FrameSpec/supportsRtl</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/supports-rtl/#supportsrtl","title":"supportsRtl","text":"<p>[jvm]\\ val supportsRtl: Boolean = false</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/theme/","title":"theme - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/FrameSpec/theme</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-frame-spec/theme/#theme","title":"theme","text":"<p>[jvm]\\ val theme: String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/","title":"InterceptorRegistrar - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/InterceptorRegistrar</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/#interceptorregistrar","title":"InterceptorRegistrar","text":"<p>[jvm]\\ object InterceptorRegistrar</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/#functions","title":"Functions","text":"Name Summary addMethodInterceptor [jvm]fun addMethodInterceptor(receiver: Class&lt;&gt;, methodName: String, interceptor: Class&lt;&gt;) addMethodInterceptors [jvm]fun addMethodInterceptors(receiver: Class&lt;&gt;, methodNamesToInterceptors: Set&lt;Pair&lt;String, Class&lt;&gt;&gt;&gt;) clearMethodInterceptors [jvm]fun clearMethodInterceptors() registerMethodInterceptors [jvm]fun registerMethodInterceptors()"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/add-method-interceptor/","title":"addMethodInterceptor - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/InterceptorRegistrar/addMethodInterceptor</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/add-method-interceptor/#addmethodinterceptor","title":"addMethodInterceptor","text":"<p>[jvm]\\ fun addMethodInterceptor(receiver: Class&lt;&gt;, methodName: String, interceptor: Class&lt;&gt;)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/add-method-interceptors/","title":"addMethodInterceptors - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/InterceptorRegistrar/addMethodInterceptors</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/add-method-interceptors/#addmethodinterceptors","title":"addMethodInterceptors","text":"<p>[jvm]\\ fun addMethodInterceptors(receiver: Class&lt;&gt;, methodNamesToInterceptors: Set&lt;Pair&lt;String, Class&lt;&gt;&gt;&gt;)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/clear-method-interceptors/","title":"clearMethodInterceptors - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/InterceptorRegistrar/clearMethodInterceptors</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/clear-method-interceptors/#clearmethodinterceptors","title":"clearMethodInterceptors","text":"<p>[jvm]\\ fun clearMethodInterceptors()</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/register-method-interceptors/","title":"registerMethodInterceptors - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/InterceptorRegistrar/registerMethodInterceptors</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-interceptor-registrar/register-method-interceptors/#registermethodinterceptors","title":"registerMethodInterceptors","text":"<p>[jvm]\\ fun registerMethodInterceptors()</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-render-extension/","title":"RenderExtension - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/RenderExtension</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-render-extension/#renderextension","title":"RenderExtension","text":"<p>[jvm]\\ interface RenderExtension</p> <p>An extension for overlaying additional information on top of each rendered frame.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-render-extension/#functions","title":"Functions","text":"Name Summary renderView [jvm]abstract fun renderView(contentView: View): ViewAllows this extension to modify the view hierarchy represented by contentView."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-render-extension/render-view/","title":"renderView - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/RenderExtension/renderView</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-render-extension/render-view/#renderview","title":"renderView","text":"<p>[jvm]\\ abstract fun renderView(contentView: View): View</p> <p>Allows this extension to modify the view hierarchy represented by contentView.</p> <p>Returns the root view of the modified hierarchy.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshot/","title":"Snapshot - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Snapshot</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshot/#snapshot","title":"Snapshot","text":"<p>[jvm]\\ data class Snapshot(val spec: FrameSpec, val image: BufferedImage)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshot/#constructors","title":"Constructors","text":"Snapshot [jvm]constructor(spec: FrameSpec, image: BufferedImage)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshot/#properties","title":"Properties","text":"Name Summary image [jvm]val image: BufferedImage spec [jvm]val spec: FrameSpec"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshot/-snapshot/","title":"Snapshot - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Snapshot/Snapshot</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshot/-snapshot/#snapshot","title":"Snapshot","text":"<p>[jvm]\\ constructor(spec: FrameSpec, image: BufferedImage)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshot/image/","title":"image - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Snapshot/image</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshot/image/#image","title":"image","text":"<p>[jvm]\\ val image: BufferedImage</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshot/spec/","title":"spec - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Snapshot/spec</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshot/spec/#spec","title":"spec","text":"<p>[jvm]\\ val spec: FrameSpec</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshotter/","title":"Snapshotter - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Snapshotter</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshotter/#snapshotter","title":"Snapshotter","text":"<p>interface Snapshotter</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshotter/#inheritors","title":"Inheritors","text":"Device"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshotter/#functions","title":"Functions","text":"Name Summary clip [jvm]abstract fun clip(view: View, clipSpec: ClipSpec): Clipabstract fun clip(composable: @Composable() -&gt; Unit, clipSpec: ClipSpec): Clip snapshot [jvm]abstract fun snapshot(view: View, timestampNanos: Long = 0): Snapshotabstract fun snapshot(composable: @Composable() -&gt; Unit, timestampNanos: Long = 0): Snapshot"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshotter/clip/","title":"clip - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Snapshotter/clip</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshotter/clip/#clip","title":"clip","text":"<p>[jvm]\\ abstract fun clip(view: View, clipSpec: ClipSpec): Clip</p> <p>abstract fun clip(composable: @Composable() -&gt; Unit, clipSpec: ClipSpec): Clip</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshotter/snapshot/","title":"snapshot - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot/Snapshotter/snapshot</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot/-snapshotter/snapshot/#snapshot","title":"snapshot","text":"<p>[jvm]\\ abstract fun snapshot(view: View, timestampNanos: Long = 0): Snapshot</p> <p>abstract fun snapshot(composable: @Composable() -&gt; Unit, timestampNanos: Long = 0): Snapshot</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/","title":"Package-level declarations - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/#types","title":"Types","text":"Name Summary FrameworkResources [jvm]open class ~~FrameworkResources~~ : ResourceRepository IdGeneratingResourceFile [jvm]class ~~IdGeneratingResourceFile~~ : ResourceFile, ValueResourceParser.IValueResourceRepository IdResourceParser [jvm]open class ~~IdResourceParser~~ MultiResourceFile [jvm]class ~~MultiResourceFile~~ : ResourceFile, ValueResourceParser.IValueResourceRepository ResourceDeltaKind [jvm]enum ~~ResourceDeltaKind~~ ResourceFile [jvm]abstract class ~~ResourceFile~~ : Configurable ResourceFolder [jvm]class ~~ResourceFolder~~ : Configurable ResourceItem [jvm]open class ~~ResourceItem~~ : Comparable&lt;T&gt; ResourceRepository [jvm]abstract class ~~ResourceRepository~~ ScanningContext [jvm]open class ~~ScanningContext~~ SingleResourceFile [jvm]open class ~~SingleResourceFile~~ : ResourceFile ValidatingResourceParser [jvm]open class ~~ValidatingResourceParser~~ ValueResourceParser [jvm]class ~~ValueResourceParser~~ : DefaultHandler"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/","title":"FrameworkResources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/FrameworkResources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/#frameworkresources","title":"FrameworkResources","text":"<p>[jvm]\\ open class ~~FrameworkResources~~ : ResourceRepository\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/#constructors","title":"Constructors","text":"FrameworkResources [jvm]constructor(@NonNullresFolder: IAbstractFolder)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/#functions","title":"Functions","text":"Name Summary clear [jvm]open fun clear() ensureInitialized [jvm]open fun ensureInitialized(): BooleanEnsures that the repository has been initialized again after a call to clear. getAvailableResourceTypes [jvm]@NonNullopen fun getAvailableResourceTypes(): List&lt;ResourceType&gt; getConfiguredResources [jvm]@NonNullopen fun getConfiguredResources(@NonNullreferenceConfig: FolderConfiguration): Map&lt;ResourceType, ResourceValueMap&gt;Returns the resources values matching a given FolderConfiguration. getFolders [jvm]@Nullableopen fun getFolders(@NonNulltype: ResourceFolderType): List&lt;ResourceFolder&gt;Returns a list of ResourceFolder for a specific ResourceFolderType. getLanguages [jvm]@NonNullopen fun getLanguages(): SortedSet&lt;String&gt;Returns the sorted list of languages used in the resources. getMatchingFile [jvm]@Nullableopen fun getMatchingFile(@NonNullname: String, @NonNulltype: ResourceFolderType, @NonNullconfig: FolderConfiguration): ResourceFileReturns the ResourceFile matching the given name, ResourceFolderType and configuration.[jvm]@Nullableopen fun getMatchingFile(@NonNullname: String, @NonNulltype: ResourceType, @NonNullconfig: FolderConfiguration): ResourceFileReturns the ResourceFile matching the given name, ResourceType and configuration. getRegions [jvm]@NonNullopen fun getRegions(@NonNullcurrentLanguage: String): SortedSet&lt;String&gt;Returns the sorted list of regions used in the resources with the given language. getResFolder [jvm]open fun getResFolder(): IAbstractFolder getResourceFolder [jvm]@Nullableopen fun getResourceFolder(@NonNullfolder: IAbstractFolder): ResourceFolderReturns the ResourceFolder associated with a IAbstractFolder. getResourceItem [jvm]@NonNullopen fun getResourceItem(@NonNulltype: ResourceType, @NonNullname: String): ResourceItemReturns a ResourceItem matching the given ResourceType and name. getResourceItemsOfType [jvm]@NonNullopen fun getResourceItemsOfType(@NonNulltype: ResourceType): List&lt;ResourceItem&gt;Returns a Collection (always non null, but can be empty) of publicResourceItem matching a given ResourceType. getSourceFiles [jvm]@Nullableopen fun getSourceFiles(@NonNulltype: ResourceType, @NonNullname: String, @NullablereferenceConfig: FolderConfiguration): List&lt;ResourceFile&gt;Returns the list of source files for a given resource. hasResourceItem [jvm]open fun hasResourceItem(@NonNullurl: String): Booleanopen fun hasResourceItem(@NonNulltype: ResourceType, @NonNullname: String): BooleanReturns true if this resource repository contains a resource of the given name. hasResourcesOfType [jvm]open fun hasResourcesOfType(@NonNulltype: ResourceType): BooleanReturns whether the repository has public resources of a given ResourceType. isFrameworkRepository [jvm]open fun isFrameworkRepository(): Boolean loadPublicResources [jvm]open fun loadPublicResources(@Nullablelogger: ILogger)Reads the public.xml file in data/res/values/ for a given resource folder and builds up a map of public resources. loadResources [jvm]open fun loadResources()Loads the resources. postUpdateCleanUp [jvm]open fun postUpdateCleanUp()Cleans up the repository of resource items that have no source file anymore. processFolder [jvm]@Nullableopen fun processFolder(@NonNullfolder: IAbstractFolder): ResourceFolderProcesses a folder and adds it to the list of existing folders. removeFolder [jvm]@Nullableopen fun removeFolder(@NonNulltype: ResourceFolderType, @NonNullremovedFolder: IAbstractFolder, @Nullablecontext: ScanningContext): ResourceFolderRemoves a ResourceFolder associated with the specified IAbstractFolder."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/-framework-resources/","title":"FrameworkResources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/FrameworkResources/FrameworkResources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/-framework-resources/#frameworkresources","title":"FrameworkResources","text":"<p>[jvm]\\ constructor(@NonNullresFolder: IAbstractFolder)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/get-resource-items-of-type/","title":"getResourceItemsOfType - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/FrameworkResources/getResourceItemsOfType</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/get-resource-items-of-type/#getresourceitemsoftype","title":"getResourceItemsOfType","text":"<p>[jvm]\\</p> <p>@NonNull</p> <p>open fun getResourceItemsOfType(@NonNulltype: ResourceType): List&lt;ResourceItem&gt;</p> <p>Returns a Collection (always non null, but can be empty) of publicResourceItem matching a given ResourceType.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/get-resource-items-of-type/#return","title":"Return","text":"<p>a collection of items, possibly empty.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/get-resource-items-of-type/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of the resources to return"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/has-resources-of-type/","title":"hasResourcesOfType - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/FrameworkResources/hasResourcesOfType</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/has-resources-of-type/#hasresourcesoftype","title":"hasResourcesOfType","text":"<p>[jvm]\\ open fun hasResourcesOfType(@NonNulltype: ResourceType): Boolean</p> <p>Returns whether the repository has public resources of a given ResourceType.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/has-resources-of-type/#return","title":"Return","text":"<p>true if the repository contains resources of the given type, false otherwise.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/has-resources-of-type/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of resource to check."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/load-public-resources/","title":"loadPublicResources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/FrameworkResources/loadPublicResources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/load-public-resources/#loadpublicresources","title":"loadPublicResources","text":"<p>[jvm]\\ open fun loadPublicResources(@Nullablelogger: ILogger)</p> <p>Reads the public.xml file in data/res/values/ for a given resource folder and builds up a map of public resources. This map is a subset of the full resource map that only contains framework resources that are public.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-framework-resources/load-public-resources/#parameters","title":"Parameters","text":"<p>jvm</p> logger a logger to report issues to"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/","title":"IdGeneratingResourceFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/IdGeneratingResourceFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/#idgeneratingresourcefile","title":"IdGeneratingResourceFile","text":"<p>[jvm]\\ class ~~IdGeneratingResourceFile~~ : ResourceFile, ValueResourceParser.IValueResourceRepository\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/#constructors","title":"Constructors","text":"IdGeneratingResourceFile [jvm]constructor(file: IAbstractFile, folder: ResourceFolder, type: ResourceType)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/#functions","title":"Functions","text":"Name Summary addResourceValue [jvm]open fun addResourceValue(value: ResourceValue) getConfiguration [jvm]open fun getConfiguration(): FolderConfigurationabstract fun getConfiguration(): FolderConfiguration getFile [jvm]fun getFile(): IAbstractFileReturns the IFile associated with the ResourceFile. getFolder [jvm]fun getFolder(): ResourceFolderReturns the parent folder as a ResourceFolder. getRepository [jvm]fun getRepository(): ResourceRepository getResourceTypes [jvm]open fun getResourceTypes(): Collection&lt;ResourceType&gt;Returns the list of ResourceType generated by the file. getValue [jvm]open fun getValue(type: ResourceType, name: String): ResourceValueReturns the value of a resource generated by this file by ResourceType and name. hasResources [jvm]open fun hasResources(type: ResourceType): BooleanReturns whether the file generated a resource of a specific type. isFramework [jvm]fun isFramework(): BooleanReturns whether the resource is a framework resource. toString [jvm]open fun toString(): String"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/-id-generating-resource-file/","title":"IdGeneratingResourceFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/IdGeneratingResourceFile/IdGeneratingResourceFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/-id-generating-resource-file/#idgeneratingresourcefile","title":"IdGeneratingResourceFile","text":"<p>[jvm]\\ constructor(file: IAbstractFile, folder: ResourceFolder, type: ResourceType)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/add-resource-value/","title":"addResourceValue - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/IdGeneratingResourceFile/addResourceValue</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/add-resource-value/#addresourcevalue","title":"addResourceValue","text":"<p>[jvm]\\ open fun addResourceValue(value: ResourceValue)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/get-resource-types/","title":"getResourceTypes - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/IdGeneratingResourceFile/getResourceTypes</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/get-resource-types/#getresourcetypes","title":"getResourceTypes","text":"<p>[jvm]\\ open fun getResourceTypes(): Collection&lt;ResourceType&gt;</p> <p>Returns the list of ResourceType generated by the file. This is never null.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/get-value/","title":"getValue - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/IdGeneratingResourceFile/getValue</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/get-value/#getvalue","title":"getValue","text":"<p>[jvm]\\ open fun getValue(type: ResourceType, name: String): ResourceValue</p> <p>Returns the value of a resource generated by this file by ResourceType and name. </p> <p>If no resource match, <code>null</code> is returned.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/get-value/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of the resource. name the name of the resource."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/has-resources/","title":"hasResources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/IdGeneratingResourceFile/hasResources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/has-resources/#hasresources","title":"hasResources","text":"<p>[jvm]\\ open fun hasResources(type: ResourceType): Boolean</p> <p>Returns whether the file generated a resource of a specific type.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-generating-resource-file/has-resources/#parameters","title":"Parameters","text":"<p>jvm</p> type The ResourceType"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/","title":"IdResourceParser - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/IdResourceParser</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/#idresourceparser","title":"IdResourceParser","text":"<p>[jvm]\\ open class ~~IdResourceParser~~\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/#constructors","title":"Constructors","text":"IdResourceParser [jvm]constructor(@NonNullrepository: ValueResourceParser.IValueResourceRepository, @NonNullcontext: ScanningContext, isFramework: Boolean)Creates a new IdResourceParser"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/#functions","title":"Functions","text":"Name Summary parse [jvm]open fun parse(type: ResourceType, path: String, input: InputStream): BooleanParse the given input and register ids with the given IValueResourceRepository."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/-id-resource-parser/","title":"IdResourceParser - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/IdResourceParser/IdResourceParser</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/-id-resource-parser/#idresourceparser","title":"IdResourceParser","text":"<p>[jvm]\\ constructor(@NonNullrepository: ValueResourceParser.IValueResourceRepository, @NonNullcontext: ScanningContext, isFramework: Boolean)</p> <p>Creates a new IdResourceParser</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/-id-resource-parser/#parameters","title":"Parameters","text":"<p>jvm</p> repository value repository for registering resource declaration context a context object with state for the current update, such as a place to stash errors encountered isFramework true if scanning a framework resource"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/parse/","title":"parse - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/IdResourceParser/parse</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/parse/#parse","title":"parse","text":"<p>[jvm]\\ open fun parse(type: ResourceType, path: String, input: InputStream): Boolean</p> <p>Parse the given input and register ids with the given IValueResourceRepository.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/parse/#return","title":"Return","text":"<p>true if parsing succeeds and false if it fails</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/parse/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of resource being scanned path the full OS path to the file being parsed input the input stream of the XML to be parsed (will be closed by this method)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-id-resource-parser/parse/#throws","title":"Throws","text":"IOException if reading the contents fails"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/","title":"MultiResourceFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/MultiResourceFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/#multiresourcefile","title":"MultiResourceFile","text":"<p>[jvm]\\ class ~~MultiResourceFile~~ : ResourceFile, ValueResourceParser.IValueResourceRepository\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/#constructors","title":"Constructors","text":"MultiResourceFile [jvm]constructor(file: IAbstractFile, folder: ResourceFolder)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/#functions","title":"Functions","text":"Name Summary addResourceValue [jvm]open fun addResourceValue(value: ResourceValue)Adds a resource item to the list getConfiguration [jvm]open fun getConfiguration(): FolderConfigurationabstract fun getConfiguration(): FolderConfiguration getFile [jvm]fun getFile(): IAbstractFileReturns the IFile associated with the ResourceFile. getFolder [jvm]fun getFolder(): ResourceFolderReturns the parent folder as a ResourceFolder. getRepository [jvm]fun getRepository(): ResourceRepository getResourceTypes [jvm]open fun getResourceTypes(): Collection&lt;ResourceType&gt;Returns the list of ResourceType generated by the file. getValue [jvm]open fun getValue(type: ResourceType, name: String): ResourceValueReturns the value of a resource generated by this file by ResourceType and name. hasResources [jvm]open fun hasResources(type: ResourceType): BooleanReturns whether the file generated a resource of a specific type. isFramework [jvm]fun isFramework(): BooleanReturns whether the resource is a framework resource. toString [jvm]open fun toString(): String"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/-multi-resource-file/","title":"MultiResourceFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/MultiResourceFile/MultiResourceFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/-multi-resource-file/#multiresourcefile","title":"MultiResourceFile","text":"<p>[jvm]\\ constructor(file: IAbstractFile, folder: ResourceFolder)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/add-resource-value/","title":"addResourceValue - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/MultiResourceFile/addResourceValue</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/add-resource-value/#addresourcevalue","title":"addResourceValue","text":"<p>[jvm]\\ open fun addResourceValue(value: ResourceValue)</p> <p>Adds a resource item to the list</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/add-resource-value/#parameters","title":"Parameters","text":"<p>jvm</p> value The value of the resource."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/get-resource-types/","title":"getResourceTypes - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/MultiResourceFile/getResourceTypes</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/get-resource-types/#getresourcetypes","title":"getResourceTypes","text":"<p>[jvm]\\ open fun getResourceTypes(): Collection&lt;ResourceType&gt;</p> <p>Returns the list of ResourceType generated by the file. This is never null.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/get-value/","title":"getValue - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/MultiResourceFile/getValue</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/get-value/#getvalue","title":"getValue","text":"<p>[jvm]\\ open fun getValue(type: ResourceType, name: String): ResourceValue</p> <p>Returns the value of a resource generated by this file by ResourceType and name. </p> <p>If no resource match, <code>null</code> is returned.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/get-value/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of the resource. name the name of the resource."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/has-resources/","title":"hasResources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/MultiResourceFile/hasResources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/has-resources/#hasresources","title":"hasResources","text":"<p>[jvm]\\ open fun hasResources(type: ResourceType): Boolean</p> <p>Returns whether the file generated a resource of a specific type.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-multi-resource-file/has-resources/#parameters","title":"Parameters","text":"<p>jvm</p> type The ResourceType"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/","title":"ResourceDeltaKind - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceDeltaKind</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/#resourcedeltakind","title":"ResourceDeltaKind","text":"<p>[jvm]\\ enum ~~ResourceDeltaKind~~\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/#entries","title":"Entries","text":"CHANGED [jvm]~~CHANGED~~ ADDED [jvm]~~ADDED~~ REMOVED [jvm]~~REMOVED~~"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/#functions","title":"Functions","text":"Name Summary valueOf [jvm]open fun valueOf(name: String): ResourceDeltaKindReturns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) values [jvm]open fun values(): Array&lt;ResourceDeltaKind&gt;Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/value-of/","title":"valueOf - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceDeltaKind/valueOf</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/value-of/#valueof","title":"valueOf","text":"<p>[jvm]\\ open fun valueOf(name: String): ResourceDeltaKind</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/value-of/#return","title":"Return","text":"<p>the enum constant with the specified name</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/value-of/#throws","title":"Throws","text":"IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/values/","title":"values - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceDeltaKind/values</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/values/#values","title":"values","text":"<p>[jvm]\\ open fun values(): Array&lt;ResourceDeltaKind&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/values/#return","title":"Return","text":"<p>an array containing the constants of this enum type, in the order they\u2019re declared</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/-a-d-d-e-d/","title":"ADDED - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceDeltaKind/ADDED</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/-a-d-d-e-d/#added","title":"ADDED","text":"<p>[jvm]\\ ~~ADDED~~</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/-a-d-d-e-d/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/-c-h-a-n-g-e-d/","title":"CHANGED - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceDeltaKind/CHANGED</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/-c-h-a-n-g-e-d/#changed","title":"CHANGED","text":"<p>[jvm]\\ ~~CHANGED~~</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/-c-h-a-n-g-e-d/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/-r-e-m-o-v-e-d/","title":"REMOVED - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceDeltaKind/REMOVED</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/-r-e-m-o-v-e-d/#removed","title":"REMOVED","text":"<p>[jvm]\\ ~~REMOVED~~</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-delta-kind/-r-e-m-o-v-e-d/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/","title":"ResourceFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/#resourcefile","title":"ResourceFile","text":"<p>abstract class ~~ResourceFile~~ : Configurable\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/#inheritors","title":"Inheritors","text":"SingleResourceFile IdGeneratingResourceFile MultiResourceFile"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/#functions","title":"Functions","text":"Name Summary getConfiguration [jvm]open fun getConfiguration(): FolderConfiguration getFile [jvm]fun getFile(): IAbstractFileReturns the IFile associated with the ResourceFile. getFolder [jvm]fun getFolder(): ResourceFolderReturns the parent folder as a ResourceFolder. getRepository [jvm]fun getRepository(): ResourceRepository getResourceTypes [jvm]abstract fun getResourceTypes(): Collection&lt;ResourceType&gt;Returns the list of ResourceType generated by the file. getValue [jvm]abstract fun getValue(type: ResourceType, name: String): ResourceValueReturns the value of a resource generated by this file by ResourceType and name. hasResources [jvm]abstract fun hasResources(type: ResourceType): BooleanReturns whether the file generated a resource of a specific type. isFramework [jvm]fun isFramework(): BooleanReturns whether the resource is a framework resource. toString [jvm]open fun toString(): String"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-configuration/","title":"getConfiguration - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFile/getConfiguration</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-configuration/#getconfiguration","title":"getConfiguration","text":"<p>[jvm]\\ open fun getConfiguration(): FolderConfiguration</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-file/","title":"getFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFile/getFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-file/#getfile","title":"getFile","text":"<p>[jvm]\\ fun getFile(): IAbstractFile</p> <p>Returns the IFile associated with the ResourceFile.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-folder/","title":"getFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFile/getFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-folder/#getfolder","title":"getFolder","text":"<p>[jvm]\\ fun getFolder(): ResourceFolder</p> <p>Returns the parent folder as a ResourceFolder.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-repository/","title":"getRepository - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFile/getRepository</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-repository/#getrepository","title":"getRepository","text":"<p>[jvm]\\ fun getRepository(): ResourceRepository</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-resource-types/","title":"getResourceTypes - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFile/getResourceTypes</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-resource-types/#getresourcetypes","title":"getResourceTypes","text":"<p>[jvm]\\ abstract fun getResourceTypes(): Collection&lt;ResourceType&gt;</p> <p>Returns the list of ResourceType generated by the file. This is never null.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-value/","title":"getValue - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFile/getValue</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-value/#getvalue","title":"getValue","text":"<p>[jvm]\\ abstract fun getValue(type: ResourceType, name: String): ResourceValue</p> <p>Returns the value of a resource generated by this file by ResourceType and name. </p> <p>If no resource match, <code>null</code> is returned.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/get-value/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of the resource. name the name of the resource."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/has-resources/","title":"hasResources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFile/hasResources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/has-resources/#hasresources","title":"hasResources","text":"<p>[jvm]\\ abstract fun hasResources(type: ResourceType): Boolean</p> <p>Returns whether the file generated a resource of a specific type.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/has-resources/#parameters","title":"Parameters","text":"<p>jvm</p> type The ResourceType"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/is-framework/","title":"isFramework - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFile/isFramework</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/is-framework/#isframework","title":"isFramework","text":"<p>[jvm]\\ fun isFramework(): Boolean</p> <p>Returns whether the resource is a framework resource.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/to-string/","title":"toString - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFile/toString</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-file/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/","title":"ResourceFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/#resourcefolder","title":"ResourceFolder","text":"<p>[jvm]\\ class ~~ResourceFolder~~ : Configurable\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/#functions","title":"Functions","text":"Name Summary addFile [jvm]open fun addFile(file: ResourceFile)Adds a ResourceFile to the folder. getConfiguration [jvm]open fun getConfiguration(): FolderConfiguration getFile [jvm]open fun getFile(filename: String): ResourceFileReturns the ResourceFile matching a given name. getFolder [jvm]open fun getFolder(): IAbstractFolderReturns the IAbstractFolder associated with this object. getRepository [jvm]open fun getRepository(): ResourceRepository getResourceTypes [jvm]open fun getResourceTypes(): Collection&lt;ResourceType&gt;Returns the list of ResourceTypes generated by the files inside this folder. getType [jvm]open fun getType(): ResourceFolderTypeReturns the ResourceFolderType of this object. hasFile [jvm]open fun hasFile(name: String): BooleanReturns whether the folder contains a file with the given name. hasResources [jvm]open fun hasResources(type: ResourceType): BooleanReturns whether a file in the folder is generating a resource of a specified type. processFile [jvm]open fun processFile(file: IAbstractFile, kind: ResourceDeltaKind, context: ScanningContext): ResourceFileProcesses a file and adds it to its parent folder resource. toString [jvm]open fun toString(): String"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/add-file/","title":"addFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/addFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/add-file/#addfile","title":"addFile","text":"<p>[jvm]\\ open fun addFile(file: ResourceFile)</p> <p>Adds a ResourceFile to the folder.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/add-file/#parameters","title":"Parameters","text":"<p>jvm</p> file The ResourceFile."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-configuration/","title":"getConfiguration - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/getConfiguration</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-configuration/#getconfiguration","title":"getConfiguration","text":"<p>[jvm]\\ open fun getConfiguration(): FolderConfiguration</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-file/","title":"getFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/getFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-file/#getfile","title":"getFile","text":"<p>[jvm]\\ open fun getFile(filename: String): ResourceFile</p> <p>Returns the ResourceFile matching a given name.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-file/#return","title":"Return","text":"<p>the ResourceFile or <code>null</code> if no match was found.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-file/#parameters","title":"Parameters","text":"<p>jvm</p> filename The name of the file to return."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-folder/","title":"getFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/getFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-folder/#getfolder","title":"getFolder","text":"<p>[jvm]\\ open fun getFolder(): IAbstractFolder</p> <p>Returns the IAbstractFolder associated with this object.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-repository/","title":"getRepository - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/getRepository</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-repository/#getrepository","title":"getRepository","text":"<p>[jvm]\\ open fun getRepository(): ResourceRepository</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-resource-types/","title":"getResourceTypes - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/getResourceTypes</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-resource-types/#getresourcetypes","title":"getResourceTypes","text":"<p>[jvm]\\ open fun getResourceTypes(): Collection&lt;ResourceType&gt;</p> <p>Returns the list of ResourceTypes generated by the files inside this folder.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-type/","title":"getType - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/getType</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/get-type/#gettype","title":"getType","text":"<p>[jvm]\\ open fun getType(): ResourceFolderType</p> <p>Returns the ResourceFolderType of this object.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/has-file/","title":"hasFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/hasFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/has-file/#hasfile","title":"hasFile","text":"<p>[jvm]\\ open fun hasFile(name: String): Boolean</p> <p>Returns whether the folder contains a file with the given name.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/has-file/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the file."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/has-resources/","title":"hasResources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/hasResources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/has-resources/#hasresources","title":"hasResources","text":"<p>[jvm]\\ open fun hasResources(type: ResourceType): Boolean</p> <p>Returns whether a file in the folder is generating a resource of a specified type.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/has-resources/#parameters","title":"Parameters","text":"<p>jvm</p> type The ResourceType being looked up."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/process-file/","title":"processFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/processFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/process-file/#processfile","title":"processFile","text":"<p>[jvm]\\ open fun processFile(file: IAbstractFile, kind: ResourceDeltaKind, context: ScanningContext): ResourceFile</p> <p>Processes a file and adds it to its parent folder resource.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/process-file/#return","title":"Return","text":"<p>the ResourceFile that was created.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/process-file/#parameters","title":"Parameters","text":"<p>jvm</p> file the underlying resource file. kind the file change kind. context a context object with state for the current update, such as a place to stash errors encountered"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/to-string/","title":"toString - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceFolder/toString</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-folder/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/","title":"ResourceItem - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/#resourceitem","title":"ResourceItem","text":"<p>[jvm]\\ open class ~~ResourceItem~~ : Comparable&lt;T&gt; \u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/#constructors","title":"Constructors","text":"ResourceItem [jvm]constructor(name: String)Constructs a new ResourceItem."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/#functions","title":"Functions","text":"Name Summary compareTo [jvm]open fun compareTo(other: ResourceItem): IntCompares the ResourceItem to another. getAlternateCount [jvm]open fun getAlternateCount(): IntReturns the number of alternate versions for this resource. getName [jvm]fun getName(): StringReturns the name of the resource. getResourceValue [jvm]open fun getResourceValue(type: ResourceType, referenceConfig: FolderConfiguration, isFramework: Boolean): ResourceValueReturns a ResourceValue for this item based on the given configuration. getSourceFileArray [jvm]open fun getSourceFileArray(): Array&lt;ResourceFile&gt;Returns the sorted list of ResourceItem objects for this resource item. getSourceFileList [jvm]open fun getSourceFileList(): List&lt;ResourceFile&gt;Returns the list of source file for this resource. getXmlString [jvm]open fun getXmlString(type: ResourceType, system: Boolean): StringReturns a formatted string usable in an XML to use for the ResourceItem. hasAlternates [jvm]open fun hasAlternates(): BooleanReturns if the resource has at least one non-default version. hasDefault [jvm]open fun hasDefault(): BooleanReturns whether the resource has a default version, with no qualifier. isDeclaredInline [jvm]open fun isDeclaredInline(): BooleanReturns whether the ID resource has been declared inline inside another resource XML file. isEditableDirectly [jvm]open fun isEditableDirectly(): BooleanReturns whether the resource is editable directly. toString [jvm]open fun toString(): String"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/-resource-item/","title":"ResourceItem - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/ResourceItem</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/-resource-item/#resourceitem","title":"ResourceItem","text":"<p>[jvm]\\ constructor(name: String)</p> <p>Constructs a new ResourceItem.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/-resource-item/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the resource as it appears in the XML and R.java files."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/compare-to/","title":"compareTo - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/compareTo</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ open fun compareTo(other: ResourceItem): Int</p> <p>Compares the ResourceItem to another.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/compare-to/#parameters","title":"Parameters","text":"<p>jvm</p> other the ResourceItem to be compared to."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-alternate-count/","title":"getAlternateCount - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/getAlternateCount</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-alternate-count/#getalternatecount","title":"getAlternateCount","text":"<p>[jvm]\\ open fun getAlternateCount(): Int</p> <p>Returns the number of alternate versions for this resource.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-alternate-count/#see-also","title":"See also","text":"ResourceFile FolderConfiguration"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-name/","title":"getName - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/getName</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-name/#getname","title":"getName","text":"<p>[jvm]\\ fun getName(): String</p> <p>Returns the name of the resource.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-resource-value/","title":"getResourceValue - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/getResourceValue</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-resource-value/#getresourcevalue","title":"getResourceValue","text":"<p>[jvm]\\ open fun getResourceValue(type: ResourceType, referenceConfig: FolderConfiguration, isFramework: Boolean): ResourceValue</p> <p>Returns a ResourceValue for this item based on the given configuration. If the ResourceItem has several source files, one will be selected based on the config.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-resource-value/#return","title":"Return","text":"<p>a ResourceValue or null if none match the config.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-resource-value/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of the resource. This is necessary because ResourceItem doesn\u2019t embed its type, but ResourceValue does. referenceConfig the config of the resource item. isFramework whether the resource is a framework value. Same as the type."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-source-file-array/","title":"getSourceFileArray - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/getSourceFileArray</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-source-file-array/#getsourcefilearray","title":"getSourceFileArray","text":"<p>[jvm]\\ open fun getSourceFileArray(): Array&lt;ResourceFile&gt;</p> <p>Returns the sorted list of ResourceItem objects for this resource item.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-source-file-list/","title":"getSourceFileList - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/getSourceFileList</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-source-file-list/#getsourcefilelist","title":"getSourceFileList","text":"<p>[jvm]\\ open fun getSourceFileList(): List&lt;ResourceFile&gt;</p> <p>Returns the list of source file for this resource.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-xml-string/","title":"getXmlString - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/getXmlString</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-xml-string/#getxmlstring","title":"getXmlString","text":"<p>[jvm]\\ open fun getXmlString(type: ResourceType, system: Boolean): String</p> <p>Returns a formatted string usable in an XML to use for the ResourceItem.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-xml-string/#return","title":"Return","text":"<p>a string in the format @[type]/[name]</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/get-xml-string/#parameters","title":"Parameters","text":"<p>jvm</p> system Whether this is a system resource or a project resource."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/has-alternates/","title":"hasAlternates - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/hasAlternates</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/has-alternates/#hasalternates","title":"hasAlternates","text":"<p>[jvm]\\ open fun hasAlternates(): Boolean</p> <p>Returns if the resource has at least one non-default version.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/has-alternates/#see-also","title":"See also","text":"ResourceFile FolderConfiguration"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/has-default/","title":"hasDefault - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/hasDefault</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/has-default/#hasdefault","title":"hasDefault","text":"<p>[jvm]\\ open fun hasDefault(): Boolean</p> <p>Returns whether the resource has a default version, with no qualifier.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/has-default/#see-also","title":"See also","text":"ResourceFile FolderConfiguration"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/is-declared-inline/","title":"isDeclaredInline - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/isDeclaredInline</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/is-declared-inline/#isdeclaredinline","title":"isDeclaredInline","text":"<p>[jvm]\\ open fun isDeclaredInline(): Boolean</p> <p>Returns whether the ID resource has been declared inline inside another resource XML file. If the resource type is not ID, this will always return <code>false</code>.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/is-editable-directly/","title":"isEditableDirectly - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/isEditableDirectly</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/is-editable-directly/#iseditabledirectly","title":"isEditableDirectly","text":"<p>[jvm]\\ open fun isEditableDirectly(): Boolean</p> <p>Returns whether the resource is editable directly. </p> <p>This is typically the case for resources that don\u2019t have alternate versions, or resources of type ID that aren\u2019t declared inline.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/to-string/","title":"toString - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceItem/toString</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-item/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/","title":"ResourceRepository - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/#resourcerepository","title":"ResourceRepository","text":"<p>abstract class ~~ResourceRepository~~\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/#inheritors","title":"Inheritors","text":"FrameworkResources"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/#functions","title":"Functions","text":"Name Summary clear [jvm]open fun clear() ensureInitialized [jvm]open fun ensureInitialized(): BooleanEnsures that the repository has been initialized again after a call to clear. getAvailableResourceTypes [jvm]@NonNullopen fun getAvailableResourceTypes(): List&lt;ResourceType&gt; getConfiguredResources [jvm]@NonNullopen fun getConfiguredResources(@NonNullreferenceConfig: FolderConfiguration): Map&lt;ResourceType, ResourceValueMap&gt;Returns the resources values matching a given FolderConfiguration. getFolders [jvm]@Nullableopen fun getFolders(@NonNulltype: ResourceFolderType): List&lt;ResourceFolder&gt;Returns a list of ResourceFolder for a specific ResourceFolderType. getLanguages [jvm]@NonNullopen fun getLanguages(): SortedSet&lt;String&gt;Returns the sorted list of languages used in the resources. getMatchingFile [jvm]@Nullableopen fun getMatchingFile(@NonNullname: String, @NonNulltype: ResourceFolderType, @NonNullconfig: FolderConfiguration): ResourceFileReturns the ResourceFile matching the given name, ResourceFolderType and configuration.[jvm]@Nullableopen fun getMatchingFile(@NonNullname: String, @NonNulltype: ResourceType, @NonNullconfig: FolderConfiguration): ResourceFileReturns the ResourceFile matching the given name, ResourceType and configuration. getRegions [jvm]@NonNullopen fun getRegions(@NonNullcurrentLanguage: String): SortedSet&lt;String&gt;Returns the sorted list of regions used in the resources with the given language. getResFolder [jvm]open fun getResFolder(): IAbstractFolder getResourceFolder [jvm]@Nullableopen fun getResourceFolder(@NonNullfolder: IAbstractFolder): ResourceFolderReturns the ResourceFolder associated with a IAbstractFolder. getResourceItem [jvm]@NonNullopen fun getResourceItem(@NonNulltype: ResourceType, @NonNullname: String): ResourceItemReturns a ResourceItem matching the given ResourceType and name. getResourceItemsOfType [jvm]@NonNullopen fun getResourceItemsOfType(@NonNulltype: ResourceType): Collection&lt;ResourceItem&gt;Returns a list of ResourceItem matching a given ResourceType. getSourceFiles [jvm]@Nullableopen fun getSourceFiles(@NonNulltype: ResourceType, @NonNullname: String, @NullablereferenceConfig: FolderConfiguration): List&lt;ResourceFile&gt;Returns the list of source files for a given resource. hasResourceItem [jvm]open fun hasResourceItem(@NonNullurl: String): Booleanopen fun hasResourceItem(@NonNulltype: ResourceType, @NonNullname: String): BooleanReturns true if this resource repository contains a resource of the given name. hasResourcesOfType [jvm]open fun hasResourcesOfType(@NonNulltype: ResourceType): BooleanReturns whether the repository has resources of a given ResourceType. isFrameworkRepository [jvm]open fun isFrameworkRepository(): Boolean loadResources [jvm]open fun loadResources()Loads the resources. postUpdateCleanUp [jvm]open fun postUpdateCleanUp()Cleans up the repository of resource items that have no source file anymore. processFolder [jvm]@Nullableopen fun processFolder(@NonNullfolder: IAbstractFolder): ResourceFolderProcesses a folder and adds it to the list of existing folders. removeFolder [jvm]@Nullableopen fun removeFolder(@NonNulltype: ResourceFolderType, @NonNullremovedFolder: IAbstractFolder, @Nullablecontext: ScanningContext): ResourceFolderRemoves a ResourceFolder associated with the specified IAbstractFolder."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/clear/","title":"clear - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/clear</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/clear/#clear","title":"clear","text":"<p>[jvm]\\ open fun clear()</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/ensure-initialized/","title":"ensureInitialized - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/ensureInitialized</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/ensure-initialized/#ensureinitialized","title":"ensureInitialized","text":"<p>[jvm]\\ open fun ensureInitialized(): Boolean</p> <p>Ensures that the repository has been initialized again after a call to clear.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/ensure-initialized/#return","title":"Return","text":"<p>true if the repository was just re-initialized.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-available-resource-types/","title":"getAvailableResourceTypes - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getAvailableResourceTypes</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-available-resource-types/#getavailableresourcetypes","title":"getAvailableResourceTypes","text":"<p>[jvm]\\</p> <p>@NonNull</p> <p>open fun getAvailableResourceTypes(): List&lt;ResourceType&gt;</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-configured-resources/","title":"getConfiguredResources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getConfiguredResources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-configured-resources/#getconfiguredresources","title":"getConfiguredResources","text":"<p>[jvm]\\</p> <p>@NonNull</p> <p>open fun getConfiguredResources(@NonNullreferenceConfig: FolderConfiguration): Map&lt;ResourceType, ResourceValueMap&gt;</p> <p>Returns the resources values matching a given FolderConfiguration.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-configured-resources/#return","title":"Return","text":"<p>a map with guaranteed to contain an entry for each ResourceType</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-configured-resources/#parameters","title":"Parameters","text":"<p>jvm</p> referenceConfig the configuration that each value must match."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-folders/","title":"getFolders - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getFolders</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-folders/#getfolders","title":"getFolders","text":"<p>[jvm]\\</p> <p>@Nullable</p> <p>open fun getFolders(@NonNulltype: ResourceFolderType): List&lt;ResourceFolder&gt;</p> <p>Returns a list of ResourceFolder for a specific ResourceFolderType.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-folders/#parameters","title":"Parameters","text":"<p>jvm</p> type The ResourceFolderType"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-languages/","title":"getLanguages - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getLanguages</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-languages/#getlanguages","title":"getLanguages","text":"<p>[jvm]\\</p> <p>@NonNull</p> <p>open fun getLanguages(): SortedSet&lt;String&gt;</p> <p>Returns the sorted list of languages used in the resources.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/","title":"getMatchingFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getMatchingFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/#getmatchingfile","title":"getMatchingFile","text":"<p>[jvm]\\</p> <p>@Nullable</p> <p>open fun getMatchingFile(@NonNullname: String, @NonNulltype: ResourceFolderType, @NonNullconfig: FolderConfiguration): ResourceFile</p> <p>Returns the ResourceFile matching the given name, ResourceFolderType and configuration. </p> <p>This only works with files generating one resource named after the file (for instance, layouts, bitmap based drawable, xml, anims).</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/#return","title":"Return","text":"<p>the matching file or <code>null</code> if no match was found.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/#parameters","title":"Parameters","text":"<p>jvm</p> name the resource name or file name type the folder type search for config the folder configuration to match for <p>[jvm]\\</p> <p>@Nullable</p> <p>open fun getMatchingFile(@NonNullname: String, @NonNulltype: ResourceType, @NonNullconfig: FolderConfiguration): ResourceFile</p> <p>Returns the ResourceFile matching the given name, ResourceType and configuration. </p> <p>This only works with files generating one resource named after the file (for instance, layouts, bitmap based drawable, xml, anims).</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/#return_1","title":"Return","text":"<p>the matching file or <code>null</code> if no match was found.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/#parameters_1","title":"Parameters","text":"<p>jvm</p> name the resource name or file name type the folder type search for config the folder configuration to match for"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-regions/","title":"getRegions - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getRegions</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-regions/#getregions","title":"getRegions","text":"<p>[jvm]\\</p> <p>@NonNull</p> <p>open fun getRegions(@NonNullcurrentLanguage: String): SortedSet&lt;String&gt;</p> <p>Returns the sorted list of regions used in the resources with the given language.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-regions/#parameters","title":"Parameters","text":"<p>jvm</p> currentLanguage the current language the region must be associated with."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-res-folder/","title":"getResFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getResFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-res-folder/#getresfolder","title":"getResFolder","text":"<p>[jvm]\\ open fun getResFolder(): IAbstractFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-folder/","title":"getResourceFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getResourceFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-folder/#getresourcefolder","title":"getResourceFolder","text":"<p>[jvm]\\</p> <p>@Nullable</p> <p>open fun getResourceFolder(@NonNullfolder: IAbstractFolder): ResourceFolder</p> <p>Returns the ResourceFolder associated with a IAbstractFolder.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-folder/#return","title":"Return","text":"<p>the ResourceFolder or null if it was not found.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-folder/#parameters","title":"Parameters","text":"<p>jvm</p> folder The IAbstractFolder object."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-item/","title":"getResourceItem - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getResourceItem</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-item/#getresourceitem","title":"getResourceItem","text":"<p>[jvm]\\</p> <p>@NonNull</p> <p>open fun getResourceItem(@NonNulltype: ResourceType, @NonNullname: String): ResourceItem</p> <p>Returns a ResourceItem matching the given ResourceType and name. If none exist, it creates one.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-item/#return","title":"Return","text":"<p>A resource item matching the type and name.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-item/#parameters","title":"Parameters","text":"<p>jvm</p> type the resource type name the name of the resource."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-items-of-type/","title":"getResourceItemsOfType - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getResourceItemsOfType</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-items-of-type/#getresourceitemsoftype","title":"getResourceItemsOfType","text":"<p>[jvm]\\</p> <p>@NonNull</p> <p>open fun getResourceItemsOfType(@NonNulltype: ResourceType): Collection&lt;ResourceItem&gt;</p> <p>Returns a list of ResourceItem matching a given ResourceType.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-items-of-type/#return","title":"Return","text":"<p>a non null collection of resource items</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-resource-items-of-type/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of the resource items to return"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-source-files/","title":"getSourceFiles - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/getSourceFiles</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-source-files/#getsourcefiles","title":"getSourceFiles","text":"<p>[jvm]\\</p> <p>@Nullable</p> <p>open fun getSourceFiles(@NonNulltype: ResourceType, @NonNullname: String, @NullablereferenceConfig: FolderConfiguration): List&lt;ResourceFile&gt;</p> <p>Returns the list of source files for a given resource. Optionally, if a FolderConfiguration is given, then only the best match for this config is returned.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-source-files/#return","title":"Return","text":"<p>a list of files generating this resource or null if it was not found.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/get-source-files/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of the resource. name the name of the resource. referenceConfig an optional config for which only the best match will be returned."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/","title":"hasResourceItem - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/hasResourceItem</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/#hasresourceitem","title":"hasResourceItem","text":"<p>[jvm]\\ open fun hasResourceItem(@NonNullurl: String): Boolean</p> <p>Returns true if this resource repository contains a resource of the given name.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/#return","title":"Return","text":"<p>true if the resource is known</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/#parameters","title":"Parameters","text":"<p>jvm</p> url the resource URL <p>[jvm]\\ open fun hasResourceItem(@NonNulltype: ResourceType, @NonNullname: String): Boolean</p> <p>Returns true if this resource repository contains a resource of the given name.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/#return_1","title":"Return","text":"<p>true if the resource is known</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/#parameters_1","title":"Parameters","text":"<p>jvm</p> type the type of resource to look up name the name of the resource"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/has-resources-of-type/","title":"hasResourcesOfType - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/hasResourcesOfType</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/has-resources-of-type/#hasresourcesoftype","title":"hasResourcesOfType","text":"<p>[jvm]\\ open fun hasResourcesOfType(@NonNulltype: ResourceType): Boolean</p> <p>Returns whether the repository has resources of a given ResourceType.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/has-resources-of-type/#return","title":"Return","text":"<p>true if the repository contains resources of the given type, false otherwise.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/has-resources-of-type/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of resource to check."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/is-framework-repository/","title":"isFrameworkRepository - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/isFrameworkRepository</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/is-framework-repository/#isframeworkrepository","title":"isFrameworkRepository","text":"<p>[jvm]\\ open fun isFrameworkRepository(): Boolean</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/load-resources/","title":"loadResources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/loadResources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/load-resources/#loadresources","title":"loadResources","text":"<p>[jvm]\\ open fun loadResources()</p> <p>Loads the resources.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/post-update-clean-up/","title":"postUpdateCleanUp - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/postUpdateCleanUp</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/post-update-clean-up/#postupdatecleanup","title":"postUpdateCleanUp","text":"<p>[jvm]\\ open fun postUpdateCleanUp()</p> <p>Cleans up the repository of resource items that have no source file anymore.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/process-folder/","title":"processFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/processFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/process-folder/#processfolder","title":"processFolder","text":"<p>[jvm]\\</p> <p>@Nullable</p> <p>open fun processFolder(@NonNullfolder: IAbstractFolder): ResourceFolder</p> <p>Processes a folder and adds it to the list of existing folders.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/process-folder/#return","title":"Return","text":"<p>the ResourceFolder created from this folder, or null if the process failed.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/process-folder/#parameters","title":"Parameters","text":"<p>jvm</p> folder the folder to process"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/remove-folder/","title":"removeFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ResourceRepository/removeFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/remove-folder/#removefolder","title":"removeFolder","text":"<p>[jvm]\\</p> <p>@Nullable</p> <p>open fun removeFolder(@NonNulltype: ResourceFolderType, @NonNullremovedFolder: IAbstractFolder, @Nullablecontext: ScanningContext): ResourceFolder</p> <p>Removes a ResourceFolder associated with the specified IAbstractFolder.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/remove-folder/#return","title":"Return","text":"<p>the ResourceFolder that was removed, or null if no matches were found.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-resource-repository/remove-folder/#parameters","title":"Parameters","text":"<p>jvm</p> type The type of the folder removedFolder the IAbstractFolder object. context the scanning context"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/","title":"ScanningContext - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ScanningContext</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/#scanningcontext","title":"ScanningContext","text":"<p>[jvm]\\ open class ~~ScanningContext~~\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/#constructors","title":"Constructors","text":"ScanningContext [jvm]constructor()Constructs a new ScanningContext"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(@NonNullerror: String)Adds the given error to the scanning context. checkValue [jvm]open fun checkValue(@Nullableuri: String, @NonNullname: String, @NonNullvalue: String): BooleanAsks the context to check whether the given attribute name and value is valid in this context. getErrors [jvm]@Nullableopen fun getErrors(): List&lt;String&gt;Returns a list of errors encountered during scanning, or null if there were no errors. needsFullAapt [jvm]open fun needsFullAapt(): BooleanReturns whether this repository has been marked as \"dirty\"; if one or more of the constituent files have declared that the resource item names that they provide have changed."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/-scanning-context/","title":"ScanningContext - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ScanningContext/ScanningContext</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/-scanning-context/#scanningcontext","title":"ScanningContext","text":"<p>[jvm]\\ constructor()</p> <p>Constructs a new ScanningContext</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/add-error/","title":"addError - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ScanningContext/addError</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/add-error/#adderror","title":"addError","text":"<p>[jvm]\\ open fun addError(@NonNullerror: String)</p> <p>Adds the given error to the scanning context. The error should use the same syntax as real aapt error messages such that the aapt parser can properly detect the filename, line number, etc.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/add-error/#parameters","title":"Parameters","text":"<p>jvm</p> error the error message, including file name and line number at the beginning"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/check-value/","title":"checkValue - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ScanningContext/checkValue</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/check-value/#checkvalue","title":"checkValue","text":"<p>[jvm]\\ open fun checkValue(@Nullableuri: String, @NonNullname: String, @NonNullvalue: String): Boolean</p> <p>Asks the context to check whether the given attribute name and value is valid in this context.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/check-value/#return","title":"Return","text":"<p>true if the attribute is valid</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/check-value/#parameters","title":"Parameters","text":"<p>jvm</p> uri the XML namespace URI name the attribute local name value the attribute value"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/get-errors/","title":"getErrors - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ScanningContext/getErrors</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/get-errors/#geterrors","title":"getErrors","text":"<p>[jvm]\\</p> <p>@Nullable</p> <p>open fun getErrors(): List&lt;String&gt;</p> <p>Returns a list of errors encountered during scanning, or null if there were no errors.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/needs-full-aapt/","title":"needsFullAapt - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ScanningContext/needsFullAapt</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/needs-full-aapt/#needsfullaapt","title":"needsFullAapt","text":"<p>[jvm]\\ open fun needsFullAapt(): Boolean</p> <p>Returns whether this repository has been marked as \"dirty\"; if one or more of the constituent files have declared that the resource item names that they provide have changed.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-scanning-context/needs-full-aapt/#return","title":"Return","text":"<p>true if a full aapt compilation is required</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/","title":"SingleResourceFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/SingleResourceFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/#singleresourcefile","title":"SingleResourceFile","text":"<p>[jvm]\\ open class ~~SingleResourceFile~~ : ResourceFile\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/#constructors","title":"Constructors","text":"SingleResourceFile [jvm]constructor(file: IAbstractFile, folder: ResourceFolder)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/#functions","title":"Functions","text":"Name Summary getConfiguration [jvm]open fun getConfiguration(): FolderConfigurationabstract fun getConfiguration(): FolderConfiguration getFile [jvm]fun getFile(): IAbstractFileReturns the IFile associated with the ResourceFile. getFolder [jvm]fun getFolder(): ResourceFolderReturns the parent folder as a ResourceFolder. getRepository [jvm]fun getRepository(): ResourceRepository getResourceTypes [jvm]open fun getResourceTypes(): Collection&lt;ResourceType&gt;Returns the list of ResourceType generated by the file. getValue [jvm]open fun getValue(type: ResourceType, name: String): ResourceValueReturns the value of a resource generated by this file by ResourceType and name. hasResources [jvm]open fun hasResources(type: ResourceType): BooleanReturns whether the file generated a resource of a specific type. isFramework [jvm]fun isFramework(): BooleanReturns whether the resource is a framework resource. toString [jvm]open fun toString(): String"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/-single-resource-file/","title":"SingleResourceFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/SingleResourceFile/SingleResourceFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/-single-resource-file/#singleresourcefile","title":"SingleResourceFile","text":"<p>[jvm]\\ constructor(file: IAbstractFile, folder: ResourceFolder)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/get-resource-types/","title":"getResourceTypes - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/SingleResourceFile/getResourceTypes</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/get-resource-types/#getresourcetypes","title":"getResourceTypes","text":"<p>[jvm]\\ open fun getResourceTypes(): Collection&lt;ResourceType&gt;</p> <p>Returns the list of ResourceType generated by the file. This is never null.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/get-value/","title":"getValue - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/SingleResourceFile/getValue</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/get-value/#getvalue","title":"getValue","text":"<p>[jvm]\\ open fun getValue(type: ResourceType, name: String): ResourceValue</p> <p>Returns the value of a resource generated by this file by ResourceType and name. </p> <p>If no resource match, <code>null</code> is returned.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/get-value/#parameters","title":"Parameters","text":"<p>jvm</p> type the type of the resource. name the name of the resource."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/has-resources/","title":"hasResources - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/SingleResourceFile/hasResources</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/has-resources/#hasresources","title":"hasResources","text":"<p>[jvm]\\ open fun hasResources(type: ResourceType): Boolean</p> <p>Returns whether the file generated a resource of a specific type.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-single-resource-file/has-resources/#parameters","title":"Parameters","text":"<p>jvm</p> type The ResourceType"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/","title":"ValidatingResourceParser - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ValidatingResourceParser</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/#validatingresourceparser","title":"ValidatingResourceParser","text":"<p>[jvm]\\ open class ~~ValidatingResourceParser~~\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/#constructors","title":"Constructors","text":"ValidatingResourceParser [jvm]constructor(@NonNullcontext: ScanningContext, isFramework: Boolean)Creates a new ValidatingResourceParser"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/#functions","title":"Functions","text":"Name Summary parse [jvm]open fun parse(path: String, input: InputStream): BooleanParse the given input and return false if it contains errors, or if the context is already tagged as needing a full aapt run."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/-validating-resource-parser/","title":"ValidatingResourceParser - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ValidatingResourceParser/ValidatingResourceParser</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/-validating-resource-parser/#validatingresourceparser","title":"ValidatingResourceParser","text":"<p>[jvm]\\ constructor(@NonNullcontext: ScanningContext, isFramework: Boolean)</p> <p>Creates a new ValidatingResourceParser</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/-validating-resource-parser/#parameters","title":"Parameters","text":"<p>jvm</p> context a context object with state for the current update, such as a place to stash errors encountered isFramework true if scanning a framework resource"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/parse/","title":"parse - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ValidatingResourceParser/parse</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/parse/#parse","title":"parse","text":"<p>[jvm]\\ open fun parse(path: String, input: InputStream): Boolean</p> <p>Parse the given input and return false if it contains errors, or if the context is already tagged as needing a full aapt run.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/parse/#return","title":"Return","text":"<p>true if parsing succeeds and false if it fails</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/parse/#parameters","title":"Parameters","text":"<p>jvm</p> path the full OS path to the file being parsed input the input stream of the XML to be parsed (will be closed by this method)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-validating-resource-parser/parse/#throws","title":"Throws","text":"IOException if reading the contents fails"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/","title":"ValueResourceParser - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ValueResourceParser</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/#valueresourceparser","title":"ValueResourceParser","text":"<p>[jvm]\\ class ~~ValueResourceParser~~ : DefaultHandler\u2014</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/#deprecated","title":"Deprecated","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/#deprecated_1","title":"Deprecated","text":"<p>This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/#constructors","title":"Constructors","text":"ValueResourceParser [jvm]constructor(repository: ValueResourceParser.IValueResourceRepository, isFramework: Boolean, libraryName: String)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/#types","title":"Types","text":"Name Summary IValueResourceRepository [jvm]interface IValueResourceRepository"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/#functions","title":"Functions","text":"Name Summary characters [jvm]open fun characters(ch: Array&lt;Char&gt;, start: Int, length: Int) declaration [jvm]open fun declaration(version: String, encoding: String, standalone: String) endDocument [jvm]open fun endDocument() endElement [jvm]open fun endElement(uri: String, localName: String, qName: String) endPrefixMapping [jvm]open fun endPrefixMapping(prefix: String) error [jvm]open fun error(e: SAXParseException) fatalError [jvm]open fun fatalError(e: SAXParseException) ignorableWhitespace [jvm]open fun ignorableWhitespace(ch: Array&lt;Char&gt;, start: Int, length: Int) notationDecl [jvm]open fun notationDecl(name: String, publicId: String, systemId: String) processingInstruction [jvm]open fun processingInstruction(target: String, data: String) resolveEntity [jvm]open fun resolveEntity(publicId: String, systemId: String): InputSource setDocumentLocator [jvm]open fun setDocumentLocator(locator: Locator) skippedEntity [jvm]open fun skippedEntity(name: String) startDocument [jvm]open fun startDocument() startElement [jvm]open fun startElement(uri: String, localName: String, qName: String, attributes: Attributes) startPrefixMapping [jvm]open fun startPrefixMapping(prefix: String, uri: String) unparsedEntityDecl [jvm]open fun unparsedEntityDecl(name: String, publicId: String, systemId: String, notationName: String) warning [jvm]open fun warning(e: SAXParseException)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/-value-resource-parser/","title":"ValueResourceParser - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ValueResourceParser/ValueResourceParser</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/-value-resource-parser/#valueresourceparser","title":"ValueResourceParser","text":"<p>[jvm]\\ constructor(repository: ValueResourceParser.IValueResourceRepository, isFramework: Boolean, libraryName: String)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/characters/","title":"characters - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ValueResourceParser/characters</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/characters/#characters","title":"characters","text":"<p>[jvm]\\ open fun characters(ch: Array&lt;Char&gt;, start: Int, length: Int)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/end-element/","title":"endElement - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ValueResourceParser/endElement</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/end-element/#endelement","title":"endElement","text":"<p>[jvm]\\ open fun endElement(uri: String, localName: String, qName: String)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/start-element/","title":"startElement - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ValueResourceParser/startElement</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/start-element/#startelement","title":"startElement","text":"<p>[jvm]\\ open fun startElement(uri: String, localName: String, qName: String, attributes: Attributes)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/","title":"IValueResourceRepository - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ValueResourceParser/IValueResourceRepository</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/#ivalueresourcerepository","title":"IValueResourceRepository","text":"<p>interface IValueResourceRepository</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/#inheritors","title":"Inheritors","text":"IdGeneratingResourceFile MultiResourceFile"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/#functions","title":"Functions","text":"Name Summary addResourceValue [jvm]abstract fun addResourceValue(value: ResourceValue)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/add-resource-value/","title":"addResourceValue - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/ValueResourceParser/IValueResourceRepository/addResourceValue</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/add-resource-value/#addresourcevalue","title":"addResourceValue","text":"<p>[jvm]\\ abstract fun addResourceValue(value: ResourceValue)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/","title":"Package-level declarations - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/#types","title":"Types","text":"Name Summary FileWrapper [jvm]open class FileWrapper : File, IAbstractFileAn implementation of IAbstractFile extending File. FolderWrapper [jvm]open class FolderWrapper : File, IAbstractFolderAn implementation of IAbstractFolder extending File. IAbstractFile [jvm]interface IAbstractFile : IAbstractResourceA file. IAbstractFolder [jvm]interface IAbstractFolder : IAbstractResourceA folder. IAbstractResource [jvm]interface IAbstractResourceBase representation of a file system resource. StreamException [jvm]open class StreamException : ExceptionException thrown when getContents fails."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/","title":"FileWrapper - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FileWrapper</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/#filewrapper","title":"FileWrapper","text":"<p>[jvm]\\ open class FileWrapper : File, IAbstractFile</p> <p>An implementation of IAbstractFile extending File.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/#constructors","title":"Constructors","text":"FileWrapper [jvm]constructor(file: File)Creates a new File instance matching a given File object.constructor(parent: File, child: String)Creates a new File instance from a parent abstract pathname and a child pathname string.constructor(osPathname: String)Creates a new File instance by converting the given pathname string into an abstract pathname.constructor(parent: String, child: String)Creates a new File instance from a parent abstract pathname and a child pathname string.constructor(uri: URI)Creates a new File instance by converting the given <code>file:</code> URI into an abstract pathname."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/#properties","title":"Properties","text":"Name Summary path [jvm]val path: String pathSeparator [jvm]val pathSeparator: String pathSeparatorChar [jvm]val pathSeparatorChar: Char separator [jvm]val separator: String separatorChar [jvm]val separatorChar: Char"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/#functions","title":"Functions","text":"Name Summary canExecute [jvm]open fun canExecute(): Boolean canRead [jvm]open fun canRead(): Boolean canWrite [jvm]open fun canWrite(): Boolean compareTo [jvm]open fun compareTo(pathname: File): Int createNewFile [jvm]open fun createNewFile(): Boolean createTempFile [jvm]open fun createTempFile(prefix: String, suffix: String, directory: File): File delete [jvm]abstract fun delete(): BooleanDeletes the resource.[jvm]open fun delete(): Boolean deleteOnExit [jvm]open fun deleteOnExit() equals [jvm]open fun equals(obj: Any): Boolean exists [jvm]open fun exists(): Boolean getAbsoluteFile [jvm]open fun getAbsoluteFile(): File getAbsolutePath [jvm]open fun getAbsolutePath(): String getCanonicalFile [jvm]open fun getCanonicalFile(): File getCanonicalPath [jvm]open fun getCanonicalPath(): String getContents [jvm]open fun getContents(): InputStreamReturns an InputStream object on the file content. getFreeSpace [jvm]open fun getFreeSpace(): Long getModificationStamp [jvm]open fun getModificationStamp(): LongReturns the last modification timestamp getName [jvm]abstract fun getName(): StringReturns the name of the resource.[jvm]open fun getName(): String getOsLocation [jvm]open fun getOsLocation(): StringReturns the OS path of the folder location (may be absolute). getOutputStream [jvm]open fun getOutputStream(): OutputStreamReturns an OutputStream to write into the file. getParent [jvm]open fun getParent(): String getParentFile [jvm]open fun getParentFile(): File getParentFolder [jvm]open fun getParentFolder(): IAbstractFolderReturns the parent folder or null if there is no parent. getPreferredWriteMode [jvm]open fun getPreferredWriteMode(): IAbstractFile.PreferredWriteModeReturns the preferred mode to write into the file. getTotalSpace [jvm]open fun getTotalSpace(): Long getUsableSpace [jvm]open fun getUsableSpace(): Long hashCode [jvm]open fun hashCode(): Int isAbsolute [jvm]open fun isAbsolute(): Boolean isDirectory [jvm]open fun isDirectory(): Boolean isFile [jvm]open fun isFile(): Boolean isHidden [jvm]open fun isHidden(): Boolean lastModified [jvm]open fun lastModified(): Long length [jvm]open fun length(): Long list [jvm]open fun list(): Array&lt;String&gt; listFiles [jvm]open fun listFiles(): Array&lt;File&gt; listRoots [jvm]open fun listRoots(): Array&lt;File&gt; mkdir [jvm]open fun mkdir(): Boolean mkdirs [jvm]open fun mkdirs(): Boolean renameTo [jvm]open fun renameTo(dest: File): Boolean setContents [jvm]open fun setContents(source: InputStream)Sets the content of the file. setExecutable [jvm]open fun setExecutable(executable: Boolean, ownerOnly: Boolean): Boolean setLastModified [jvm]open fun setLastModified(time: Long): Boolean setReadable [jvm]open fun setReadable(readable: Boolean, ownerOnly: Boolean): Boolean setReadOnly [jvm]open fun setReadOnly(): Boolean setWritable [jvm]open fun setWritable(writable: Boolean, ownerOnly: Boolean): Boolean toPath [jvm]open fun toPath(): Path toString [jvm]open fun toString(): String toURI [jvm]open fun toURI(): URI toURL [jvm]open fun toURL(): URL"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/","title":"FileWrapper - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FileWrapper/FileWrapper</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/#filewrapper","title":"FileWrapper","text":"<p>[jvm]\\ constructor(file: File)</p> <p>Creates a new File instance matching a given File object.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/#parameters","title":"Parameters","text":"<p>jvm</p> file the file to match <p>[jvm]\\ constructor(parent: File, child: String)</p> <p>Creates a new File instance from a parent abstract pathname and a child pathname string.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/#parameters_1","title":"Parameters","text":"<p>jvm</p> parent the parent pathname child the child name"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/#see-also","title":"See also","text":"File <p>[jvm]\\ constructor(osPathname: String)</p> <p>Creates a new File instance by converting the given pathname string into an abstract pathname.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/#parameters_2","title":"Parameters","text":"<p>jvm</p> osPathname the OS pathname"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/#see-also_1","title":"See also","text":"File <p>[jvm]\\ constructor(parent: String, child: String)</p> <p>Creates a new File instance from a parent abstract pathname and a child pathname string.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/#parameters_3","title":"Parameters","text":"<p>jvm</p> parent the parent pathname child the child name"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/#see-also_2","title":"See also","text":"File <p>[jvm]\\ constructor(uri: URI)</p> <p>Creates a new File instance by converting the given <code>file:</code> URI into an abstract pathname.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/#parameters_4","title":"Parameters","text":"<p>jvm</p> uri An absolute, hierarchical URI with a scheme equal to \"file\", a non-empty path component, and undefined authority, query, and fragment components"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/-file-wrapper/#see-also_3","title":"See also","text":"File"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/exists/","title":"exists - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FileWrapper/exists</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/exists/#exists","title":"exists","text":"<p>[jvm]\\ open fun exists(): Boolean</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-contents/","title":"getContents - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FileWrapper/getContents</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-contents/#getcontents","title":"getContents","text":"<p>[jvm]\\ open fun getContents(): InputStream</p> <p>Returns an InputStream object on the file content. The stream must be closed by the caller.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-contents/#throws","title":"Throws","text":"StreamException"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-modification-stamp/","title":"getModificationStamp - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FileWrapper/getModificationStamp</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-modification-stamp/#getmodificationstamp","title":"getModificationStamp","text":"<p>[jvm]\\ open fun getModificationStamp(): Long</p> <p>Returns the last modification timestamp</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-os-location/","title":"getOsLocation - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FileWrapper/getOsLocation</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-os-location/#getoslocation","title":"getOsLocation","text":"<p>[jvm]\\ open fun getOsLocation(): String</p> <p>Returns the OS path of the folder location (may be absolute).</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-output-stream/","title":"getOutputStream - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FileWrapper/getOutputStream</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-output-stream/#getoutputstream","title":"getOutputStream","text":"<p>[jvm]\\ open fun getOutputStream(): OutputStream</p> <p>Returns an OutputStream to write into the file.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-output-stream/#throws","title":"Throws","text":"StreamException"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-parent-folder/","title":"getParentFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FileWrapper/getParentFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-parent-folder/#getparentfolder","title":"getParentFolder","text":"<p>[jvm]\\ open fun getParentFolder(): IAbstractFolder</p> <p>Returns the parent folder or null if there is no parent.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-preferred-write-mode/","title":"getPreferredWriteMode - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FileWrapper/getPreferredWriteMode</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/get-preferred-write-mode/#getpreferredwritemode","title":"getPreferredWriteMode","text":"<p>[jvm]\\ open fun getPreferredWriteMode(): IAbstractFile.PreferredWriteMode</p> <p>Returns the preferred mode to write into the file.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/set-contents/","title":"setContents - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FileWrapper/setContents</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/set-contents/#setcontents","title":"setContents","text":"<p>[jvm]\\ open fun setContents(source: InputStream)</p> <p>Sets the content of the file.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/set-contents/#parameters","title":"Parameters","text":"<p>jvm</p> source the content"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-file-wrapper/set-contents/#throws","title":"Throws","text":"StreamException"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/","title":"FolderWrapper - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FolderWrapper</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/#folderwrapper","title":"FolderWrapper","text":"<p>[jvm]\\ open class FolderWrapper : File, IAbstractFolder</p> <p>An implementation of IAbstractFolder extending File.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/#constructors","title":"Constructors","text":"FolderWrapper [jvm]constructor(parent: File, child: String)Creates a new File instance from a parent abstract pathname and a child pathname string.constructor(pathname: String)Creates a new File instance by converting the given pathname string into an abstract pathname.constructor(parent: String, child: String)Creates a new File instance from a parent abstract pathname and a child pathname string.constructor(uri: URI)Creates a new File instance by converting the given <code>file:</code> URI into an abstract pathname.constructor(file: File)Creates a new File instance matching a give File object."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/#properties","title":"Properties","text":"Name Summary path [jvm]val path: String pathSeparator [jvm]val pathSeparator: String pathSeparatorChar [jvm]val pathSeparatorChar: Char separator [jvm]val separator: String separatorChar [jvm]val separatorChar: Char"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/#functions","title":"Functions","text":"Name Summary canExecute [jvm]open fun canExecute(): Boolean canRead [jvm]open fun canRead(): Boolean canWrite [jvm]open fun canWrite(): Boolean compareTo [jvm]open fun compareTo(pathname: File): Int createNewFile [jvm]open fun createNewFile(): Boolean createTempFile [jvm]open fun createTempFile(prefix: String, suffix: String, directory: File): File delete [jvm]abstract fun delete(): BooleanDeletes the resource.[jvm]open fun delete(): Boolean deleteOnExit [jvm]open fun deleteOnExit() equals [jvm]open fun equals(obj: Any): Boolean exists [jvm]open fun exists(): Boolean getAbsoluteFile [jvm]open fun getAbsoluteFile(): File getAbsolutePath [jvm]open fun getAbsolutePath(): String getCanonicalFile [jvm]open fun getCanonicalFile(): File getCanonicalPath [jvm]open fun getCanonicalPath(): String getFile [jvm]open fun getFile(name: String): IAbstractFileReturns an IAbstractFile representing a child of the current folder with the given name. getFolder [jvm]open fun getFolder(name: String): IAbstractFolderReturns an IAbstractFolder representing a child of the current folder with the given name. getFreeSpace [jvm]open fun getFreeSpace(): Long getName [jvm]abstract fun getName(): StringReturns the name of the resource.[jvm]open fun getName(): String getOsLocation [jvm]open fun getOsLocation(): StringReturns the OS path of the folder location (may be absolute). getParent [jvm]open fun getParent(): String getParentFile [jvm]open fun getParentFile(): File getParentFolder [jvm]open fun getParentFolder(): IAbstractFolderReturns the parent folder or null if there is no parent. getTotalSpace [jvm]open fun getTotalSpace(): Long getUsableSpace [jvm]open fun getUsableSpace(): Long hasFile [jvm]open fun hasFile(name: String): BooleanReturns true if the receiver contains a file with a given name hashCode [jvm]open fun hashCode(): Int isAbsolute [jvm]open fun isAbsolute(): Boolean isDirectory [jvm]open fun isDirectory(): Boolean isFile [jvm]open fun isFile(): Boolean isHidden [jvm]open fun isHidden(): Boolean lastModified [jvm]open fun lastModified(): Long length [jvm]open fun length(): Long list [jvm]open fun list(filter: IAbstractFolder.FilenameFilter): Array&lt;String&gt;Returns a list of all existing file and directory members in this folder that satisfy the specified filter.[jvm]open fun list(): Array&lt;String&gt; listFiles [jvm]open fun listFiles(): Array&lt;File&gt; listMembers [jvm]open fun listMembers(): Array&lt;IAbstractResource&gt;Returns a list of all existing file and directory members in this folder. listRoots [jvm]open fun listRoots(): Array&lt;File&gt; mkdir [jvm]open fun mkdir(): Boolean mkdirs [jvm]open fun mkdirs(): Boolean renameTo [jvm]open fun renameTo(dest: File): Boolean setExecutable [jvm]open fun setExecutable(executable: Boolean, ownerOnly: Boolean): Boolean setLastModified [jvm]open fun setLastModified(time: Long): Boolean setReadable [jvm]open fun setReadable(readable: Boolean, ownerOnly: Boolean): Boolean setReadOnly [jvm]open fun setReadOnly(): Boolean setWritable [jvm]open fun setWritable(writable: Boolean, ownerOnly: Boolean): Boolean toPath [jvm]open fun toPath(): Path toString [jvm]open fun toString(): String toURI [jvm]open fun toURI(): URI toURL [jvm]open fun toURL(): URL"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/","title":"FolderWrapper - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FolderWrapper/FolderWrapper</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/#folderwrapper","title":"FolderWrapper","text":"<p>[jvm]\\ constructor(parent: File, child: String)</p> <p>Creates a new File instance from a parent abstract pathname and a child pathname string.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/#parameters","title":"Parameters","text":"<p>jvm</p> parent the parent pathname child the child name"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/#see-also","title":"See also","text":"File <p>[jvm]\\ constructor(pathname: String)</p> <p>Creates a new File instance by converting the given pathname string into an abstract pathname.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/#parameters_1","title":"Parameters","text":"<p>jvm</p> pathname the pathname"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/#see-also_1","title":"See also","text":"File <p>[jvm]\\ constructor(parent: String, child: String)</p> <p>Creates a new File instance from a parent abstract pathname and a child pathname string.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/#parameters_2","title":"Parameters","text":"<p>jvm</p> parent the parent pathname child the child name"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/#see-also_2","title":"See also","text":"File <p>[jvm]\\ constructor(uri: URI)</p> <p>Creates a new File instance by converting the given <code>file:</code> URI into an abstract pathname.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/#parameters_3","title":"Parameters","text":"<p>jvm</p> uri An absolute, hierarchical URI with a scheme equal to \"file\", a non-empty path component, and undefined authority, query, and fragment components"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/#see-also_3","title":"See also","text":"File <p>[jvm]\\ constructor(file: File)</p> <p>Creates a new File instance matching a give File object.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/-folder-wrapper/#parameters_4","title":"Parameters","text":"<p>jvm</p> file the file to match"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/exists/","title":"exists - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FolderWrapper/exists</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/exists/#exists","title":"exists","text":"<p>[jvm]\\ open fun exists(): Boolean</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/get-file/","title":"getFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FolderWrapper/getFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/get-file/#getfile","title":"getFile","text":"<p>[jvm]\\ open fun getFile(name: String): IAbstractFile</p> <p>Returns an IAbstractFile representing a child of the current folder with the given name. The file may not actually exist.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/get-file/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the file."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/get-folder/","title":"getFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FolderWrapper/getFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/get-folder/#getfolder","title":"getFolder","text":"<p>[jvm]\\ open fun getFolder(name: String): IAbstractFolder</p> <p>Returns an IAbstractFolder representing a child of the current folder with the given name. The folder may not actually exist.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/get-folder/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the folder."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/get-os-location/","title":"getOsLocation - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FolderWrapper/getOsLocation</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/get-os-location/#getoslocation","title":"getOsLocation","text":"<p>[jvm]\\ open fun getOsLocation(): String</p> <p>Returns the OS path of the folder location (may be absolute).</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/get-parent-folder/","title":"getParentFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FolderWrapper/getParentFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/get-parent-folder/#getparentfolder","title":"getParentFolder","text":"<p>[jvm]\\ open fun getParentFolder(): IAbstractFolder</p> <p>Returns the parent folder or null if there is no parent.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/has-file/","title":"hasFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FolderWrapper/hasFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/has-file/#hasfile","title":"hasFile","text":"<p>[jvm]\\ open fun hasFile(name: String): Boolean</p> <p>Returns true if the receiver contains a file with a given name</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/has-file/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the file. This is the name without the path leading to the parent folder."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/list-members/","title":"listMembers - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FolderWrapper/listMembers</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/list-members/#listmembers","title":"listMembers","text":"<p>[jvm]\\ open fun listMembers(): Array&lt;IAbstractResource&gt;</p> <p>Returns a list of all existing file and directory members in this folder. The returned array can be empty but is never null.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/list/","title":"list - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/FolderWrapper/list</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/list/#list","title":"list","text":"<p>[jvm]\\ open fun list(filter: IAbstractFolder.FilenameFilter): Array&lt;String&gt;</p> <p>Returns a list of all existing file and directory members in this folder that satisfy the specified filter.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/list/#return","title":"Return","text":"<p>An array of file names (generated using getName). The array can be empty but is never null.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-folder-wrapper/list/#parameters","title":"Parameters","text":"<p>jvm</p> filter A filename filter instance. Must not be null."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/","title":"IAbstractFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/#iabstractfile","title":"IAbstractFile","text":"<p>interface IAbstractFile : IAbstractResource</p> <p>A file.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/#inheritors","title":"Inheritors","text":"FileWrapper"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/#types","title":"Types","text":"Name Summary PreferredWriteMode [jvm]enum PreferredWriteMode"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/#functions","title":"Functions","text":"Name Summary delete [jvm]abstract fun delete(): BooleanDeletes the resource. exists [jvm]abstract fun exists(): BooleanReturns whether the resource actually exists. getContents [jvm]abstract fun getContents(): InputStreamReturns an InputStream object on the file content. getModificationStamp [jvm]abstract fun getModificationStamp(): LongReturns the last modification timestamp getName [jvm]abstract fun getName(): StringReturns the name of the resource. getOsLocation [jvm]abstract fun getOsLocation(): StringReturns the OS path of the folder location (may be absolute). getOutputStream [jvm]abstract fun getOutputStream(): OutputStreamReturns an OutputStream to write into the file. getParentFolder [jvm]abstract fun getParentFolder(): IAbstractFolderReturns the parent folder or null if there is no parent. getPath [jvm]abstract fun getPath(): StringReturns the path of the resource. getPreferredWriteMode [jvm]abstract fun getPreferredWriteMode(): IAbstractFile.PreferredWriteModeReturns the preferred mode to write into the file. setContents [jvm]abstract fun setContents(source: InputStream)Sets the content of the file."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/get-contents/","title":"getContents - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile/getContents</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/get-contents/#getcontents","title":"getContents","text":"<p>[jvm]\\ abstract fun getContents(): InputStream</p> <p>Returns an InputStream object on the file content. The stream must be closed by the caller.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/get-contents/#throws","title":"Throws","text":"StreamException"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/get-modification-stamp/","title":"getModificationStamp - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile/getModificationStamp</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/get-modification-stamp/#getmodificationstamp","title":"getModificationStamp","text":"<p>[jvm]\\ abstract fun getModificationStamp(): Long</p> <p>Returns the last modification timestamp</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/get-output-stream/","title":"getOutputStream - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile/getOutputStream</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/get-output-stream/#getoutputstream","title":"getOutputStream","text":"<p>[jvm]\\ abstract fun getOutputStream(): OutputStream</p> <p>Returns an OutputStream to write into the file.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/get-output-stream/#throws","title":"Throws","text":"StreamException"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/get-preferred-write-mode/","title":"getPreferredWriteMode - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile/getPreferredWriteMode</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/get-preferred-write-mode/#getpreferredwritemode","title":"getPreferredWriteMode","text":"<p>[jvm]\\ abstract fun getPreferredWriteMode(): IAbstractFile.PreferredWriteMode</p> <p>Returns the preferred mode to write into the file.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/set-contents/","title":"setContents - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile/setContents</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/set-contents/#setcontents","title":"setContents","text":"<p>[jvm]\\ abstract fun setContents(source: InputStream)</p> <p>Sets the content of the file.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/set-contents/#parameters","title":"Parameters","text":"<p>jvm</p> source the content"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/set-contents/#throws","title":"Throws","text":"StreamException"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/","title":"PreferredWriteMode - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile/PreferredWriteMode</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/#preferredwritemode","title":"PreferredWriteMode","text":"<p>[jvm]\\ enum PreferredWriteMode</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/#entries","title":"Entries","text":"INPUTSTREAM [jvm]INPUTSTREAM OUTPUTSTREAM [jvm]OUTPUTSTREAM"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/#functions","title":"Functions","text":"Name Summary valueOf [jvm]open fun valueOf(name: String): IAbstractFile.PreferredWriteModeReturns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) values [jvm]open fun values(): Array&lt;IAbstractFile.PreferredWriteMode&gt;Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/value-of/","title":"valueOf - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile/PreferredWriteMode/valueOf</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/value-of/#valueof","title":"valueOf","text":"<p>[jvm]\\ open fun valueOf(name: String): IAbstractFile.PreferredWriteMode</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/value-of/#return","title":"Return","text":"<p>the enum constant with the specified name</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/value-of/#throws","title":"Throws","text":"IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/values/","title":"values - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile/PreferredWriteMode/values</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/values/#values","title":"values","text":"<p>[jvm]\\ open fun values(): Array&lt;IAbstractFile.PreferredWriteMode&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/values/#return","title":"Return","text":"<p>an array containing the constants of this enum type, in the order they\u2019re declared</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/-i-n-p-u-t-s-t-r-e-a-m/","title":"INPUTSTREAM - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile/PreferredWriteMode/INPUTSTREAM</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/-i-n-p-u-t-s-t-r-e-a-m/#inputstream","title":"INPUTSTREAM","text":"<p>[jvm]\\ INPUTSTREAM</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/-o-u-t-p-u-t-s-t-r-e-a-m/","title":"OUTPUTSTREAM - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFile/PreferredWriteMode/OUTPUTSTREAM</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-file/-preferred-write-mode/-o-u-t-p-u-t-s-t-r-e-a-m/#outputstream","title":"OUTPUTSTREAM","text":"<p>[jvm]\\ OUTPUTSTREAM</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/","title":"IAbstractFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/#iabstractfolder","title":"IAbstractFolder","text":"<p>interface IAbstractFolder : IAbstractResource</p> <p>A folder.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/#inheritors","title":"Inheritors","text":"FolderWrapper"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/#types","title":"Types","text":"Name Summary FilenameFilter [jvm]interface FilenameFilterInstances of classes that implement this interface are used to filter filenames."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/#functions","title":"Functions","text":"Name Summary delete [jvm]abstract fun delete(): BooleanDeletes the resource. exists [jvm]abstract fun exists(): BooleanReturns whether the resource actually exists. getFile [jvm]abstract fun getFile(name: String): IAbstractFileReturns an IAbstractFile representing a child of the current folder with the given name. getFolder [jvm]abstract fun getFolder(name: String): IAbstractFolderReturns an IAbstractFolder representing a child of the current folder with the given name. getName [jvm]abstract fun getName(): StringReturns the name of the resource. getOsLocation [jvm]abstract fun getOsLocation(): StringReturns the OS path of the folder location (may be absolute). getParentFolder [jvm]abstract fun getParentFolder(): IAbstractFolderReturns the parent folder or null if there is no parent. getPath [jvm]abstract fun getPath(): StringReturns the path of the resource. hasFile [jvm]abstract fun hasFile(name: String): BooleanReturns true if the receiver contains a file with a given name list [jvm]abstract fun list(filter: IAbstractFolder.FilenameFilter): Array&lt;String&gt;Returns a list of all existing file and directory members in this folder that satisfy the specified filter. listMembers [jvm]abstract fun listMembers(): Array&lt;IAbstractResource&gt;Returns a list of all existing file and directory members in this folder."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/get-file/","title":"getFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFolder/getFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/get-file/#getfile","title":"getFile","text":"<p>[jvm]\\ abstract fun getFile(name: String): IAbstractFile</p> <p>Returns an IAbstractFile representing a child of the current folder with the given name. The file may not actually exist.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/get-file/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the file."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/get-folder/","title":"getFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFolder/getFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/get-folder/#getfolder","title":"getFolder","text":"<p>[jvm]\\ abstract fun getFolder(name: String): IAbstractFolder</p> <p>Returns an IAbstractFolder representing a child of the current folder with the given name. The folder may not actually exist.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/get-folder/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the folder."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/has-file/","title":"hasFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFolder/hasFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/has-file/#hasfile","title":"hasFile","text":"<p>[jvm]\\ abstract fun hasFile(name: String): Boolean</p> <p>Returns true if the receiver contains a file with a given name</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/has-file/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the file. This is the name without the path leading to the parent folder."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/list-members/","title":"listMembers - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFolder/listMembers</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/list-members/#listmembers","title":"listMembers","text":"<p>[jvm]\\ abstract fun listMembers(): Array&lt;IAbstractResource&gt;</p> <p>Returns a list of all existing file and directory members in this folder. The returned array can be empty but is never null.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/list/","title":"list - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFolder/list</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/list/#list","title":"list","text":"<p>[jvm]\\ abstract fun list(filter: IAbstractFolder.FilenameFilter): Array&lt;String&gt;</p> <p>Returns a list of all existing file and directory members in this folder that satisfy the specified filter.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/list/#return","title":"Return","text":"<p>An array of file names (generated using getName). The array can be empty but is never null.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/list/#parameters","title":"Parameters","text":"<p>jvm</p> filter A filename filter instance. Must not be null."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/-filename-filter/","title":"FilenameFilter - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFolder/FilenameFilter</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/-filename-filter/#filenamefilter","title":"FilenameFilter","text":"<p>[jvm]\\ interface FilenameFilter</p> <p>Instances of classes that implement this interface are used to filter filenames.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/-filename-filter/#functions","title":"Functions","text":"Name Summary accept [jvm]abstract fun accept(dir: IAbstractFolder, name: String): BooleanTests if a specified file should be included in a file list."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/-filename-filter/accept/","title":"accept - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractFolder/FilenameFilter/accept</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/-filename-filter/accept/#accept","title":"accept","text":"<p>[jvm]\\ abstract fun accept(dir: IAbstractFolder, name: String): Boolean</p> <p>Tests if a specified file should be included in a file list.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/-filename-filter/accept/#return","title":"Return","text":"<p><code>true</code> if and only if the name should be included in the file list; <code>false</code> otherwise.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-folder/-filename-filter/accept/#parameters","title":"Parameters","text":"<p>jvm</p> dir the directory in which the file was found. name the name of the file."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/","title":"IAbstractResource - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractResource</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/#iabstractresource","title":"IAbstractResource","text":"<p>interface IAbstractResource</p> <p>Base representation of a file system resource. </p> <p>This somewhat limited interface is designed to let classes use file-system resources, without having the manually handle either the standard Java file or the Eclipse file API..</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/#inheritors","title":"Inheritors","text":"IAbstractFolder IAbstractFile"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/#functions","title":"Functions","text":"Name Summary delete [jvm]abstract fun delete(): BooleanDeletes the resource. exists [jvm]abstract fun exists(): BooleanReturns whether the resource actually exists. getName [jvm]abstract fun getName(): StringReturns the name of the resource. getOsLocation [jvm]abstract fun getOsLocation(): StringReturns the OS path of the folder location (may be absolute). getParentFolder [jvm]abstract fun getParentFolder(): IAbstractFolderReturns the parent folder or null if there is no parent. getPath [jvm]abstract fun getPath(): StringReturns the path of the resource."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/delete/","title":"delete - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractResource/delete</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/delete/#delete","title":"delete","text":"<p>[jvm]\\ abstract fun delete(): Boolean</p> <p>Deletes the resource.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/exists/","title":"exists - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractResource/exists</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/exists/#exists","title":"exists","text":"<p>[jvm]\\ abstract fun exists(): Boolean</p> <p>Returns whether the resource actually exists.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/get-name/","title":"getName - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractResource/getName</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/get-name/#getname","title":"getName","text":"<p>[jvm]\\ abstract fun getName(): String</p> <p>Returns the name of the resource.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/get-os-location/","title":"getOsLocation - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractResource/getOsLocation</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/get-os-location/#getoslocation","title":"getOsLocation","text":"<p>[jvm]\\ abstract fun getOsLocation(): String</p> <p>Returns the OS path of the folder location (may be absolute).</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/get-parent-folder/","title":"getParentFolder - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractResource/getParentFolder</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/get-parent-folder/#getparentfolder","title":"getParentFolder","text":"<p>[jvm]\\ abstract fun getParentFolder(): IAbstractFolder</p> <p>Returns the parent folder or null if there is no parent.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/get-path/","title":"getPath - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/IAbstractResource/getPath</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-i-abstract-resource/get-path/#getpath","title":"getPath","text":"<p>[jvm]\\ abstract fun getPath(): String</p> <p>Returns the path of the resource.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/","title":"StreamException - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/StreamException</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/#streamexception","title":"StreamException","text":"<p>[jvm]\\ open class StreamException : Exception</p> <p>Exception thrown when getContents fails.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/#constructors","title":"Constructors","text":"StreamException [jvm]constructor(e: Exception, file: IAbstractFile)constructor(e: Exception, file: IAbstractFile, error: StreamException.Error)"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/#types","title":"Types","text":"Name Summary Error [jvm]enum Error"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable stackTrace [jvm]open var stackTrace: Array&lt;StackTraceElement&gt;"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(exception: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getError [jvm]open fun getError(): StreamException.Error getFile [jvm]open fun getFile(): IAbstractFile getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getMessage [jvm]open fun getMessage(): String getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(cause: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace() toString [jvm]open fun toString(): String"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-stream-exception/","title":"StreamException - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/StreamException/StreamException</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-stream-exception/#streamexception","title":"StreamException","text":"<p>[jvm]\\ constructor(e: Exception, file: IAbstractFile)</p> <p>constructor(e: Exception, file: IAbstractFile, error: StreamException.Error)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/get-error/","title":"getError - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/StreamException/getError</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/get-error/#geterror","title":"getError","text":"<p>[jvm]\\ open fun getError(): StreamException.Error</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/get-file/","title":"getFile - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/StreamException/getFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/get-file/#getfile","title":"getFile","text":"<p>[jvm]\\ open fun getFile(): IAbstractFile</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/","title":"Error - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/StreamException/Error</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/#error","title":"Error","text":"<p>[jvm]\\ enum Error</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/#entries","title":"Entries","text":"DEFAULT [jvm]DEFAULT OUTOFSYNC [jvm]OUTOFSYNC FILENOTFOUND [jvm]FILENOTFOUND"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/#functions","title":"Functions","text":"Name Summary valueOf [jvm]open fun valueOf(name: String): StreamException.ErrorReturns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) values [jvm]open fun values(): Array&lt;StreamException.Error&gt;Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants."},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/value-of/","title":"valueOf - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/StreamException/Error/valueOf</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/value-of/#valueof","title":"valueOf","text":"<p>[jvm]\\ open fun valueOf(name: String): StreamException.Error</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/value-of/#return","title":"Return","text":"<p>the enum constant with the specified name</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/value-of/#throws","title":"Throws","text":"IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/values/","title":"values - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/StreamException/Error/values</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/values/#values","title":"values","text":"<p>[jvm]\\ open fun values(): Array&lt;StreamException.Error&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants.</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/values/#return","title":"Return","text":"<p>an array containing the constants of this enum type, in the order they\u2019re declared</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/-d-e-f-a-u-l-t/","title":"DEFAULT - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/StreamException/Error/DEFAULT</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/-d-e-f-a-u-l-t/#default","title":"DEFAULT","text":"<p>[jvm]\\ DEFAULT</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/-f-i-l-e-n-o-t-f-o-u-n-d/","title":"FILENOTFOUND - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/StreamException/Error/FILENOTFOUND</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/-f-i-l-e-n-o-t-f-o-u-n-d/#filenotfound","title":"FILENOTFOUND","text":"<p>[jvm]\\ FILENOTFOUND</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/-o-u-t-o-f-s-y-n-c/","title":"OUTOFSYNC - Paparazzi","text":"<p>//paparazzi2/app.cash.paparazzi.snapshot.android.io/StreamException/Error/OUTOFSYNC</p>"},{"location":"1.x/paparazzi2/app.cash.paparazzi.snapshot.android.io/-stream-exception/-error/-o-u-t-o-f-s-y-n-c/#outofsync","title":"OUTOFSYNC","text":"<p>[jvm]\\ OUTOFSYNC</p>"}]}